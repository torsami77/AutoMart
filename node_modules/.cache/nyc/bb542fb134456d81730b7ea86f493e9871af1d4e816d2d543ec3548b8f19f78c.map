{"version":3,"sources":["app.js"],"names":["PORT","process","env","app","upload","mynodeconfig","allowCrossDomain","req","res","next","header","use","bodyParser","json","urlencoded","extended","text","type","express","get","sendFile","path","resolve","post","signUp","signIn","single","seller","postAd","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,GAAG,GAAG,0BAAZ;IACQC,M,GAAWC,wB,CAAXD,M;;AAGR,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,qBAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,cAA3C;AACAD,EAAAA,IAAI;AACL,CALD;;AAOAN,GAAG,CAACQ,GAAJ,CAAQL,gBAAR;AACAH,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAV,GAAG,CAACQ,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAZ,GAAG,CAACQ,GAAJ,CAAQC,uBAAWI,IAAX,EAAR;AACAb,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,IAAX,CAAgB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAAR;AACAd,GAAG,CAACQ,GAAJ,CAAQO,8BAAe,MAAf,CAAR;AACAf,GAAG,CAACQ,GAAJ,CAAQ,+BAAR;AAGAR,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACY,QAAJ,CAAaC,iBAAKC,OAAL,CAAa,iBAAb,CAAb;AACD,CAFD;AAGAnB,GAAG,CAACoB,IAAJ,CAAS,gBAAT,EAA2BC,kBAA3B;AACArB,GAAG,CAACoB,IAAJ,CAAS,gBAAT,EAA2BE,kBAA3B;AACAtB,GAAG,CAACoB,IAAJ,CAAS,aAAT,EAAwBnB,MAAM,CAACsB,MAAP,CAAc,UAAd,CAAxB,EAAmDC,mBAAOC,MAA1D;AAEAzB,GAAG,CAAC0B,MAAJ,CAAW7B,IAAX,EAAiB,YAAM;AACrB8B,EAAAA,OAAO,CAACC,GAAR,kCAAsC/B,IAAtC;AACD,CAFD;eAIe;AAAEG,EAAAA,GAAG,EAAHA;AAAF,C","sourceRoot":"/home/sami/Documents/AutoMart/src","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cookieParser from 'cookie-parser';\r\nimport path from 'path';\r\nimport signUp from './ctl/signUp';\r\nimport signIn from './ctl/signIn';\r\nimport seller from './ctl/seller';\r\nimport mynodeconfig from './mynodeconfig';\r\n\r\n\r\nconst PORT = process.env.PORT || 5000;\r\nconst app = express();\r\nconst { upload } = mynodeconfig;\r\n\r\n\r\nconst allowCrossDomain = (req, res, next) => {\r\n  res.header('Access-Control-Allow-Origin', '*');\r\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\r\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\r\n  next();\r\n};\r\n\r\napp.use(allowCrossDomain);\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.text());\r\napp.use(bodyParser.json({ type: 'application/json' }));\r\napp.use(express.static('./ui'));\r\napp.use(cookieParser());\r\n\r\n\r\napp.get('/', (req, res) => {\r\n  res.sendFile(path.resolve('./ui/index.html'));\r\n});\r\napp.post('/api/v1/signup', signUp);\r\napp.post('/api/v1/signin', signIn);\r\napp.post('/api/v1/car', upload.single('carImage'), seller.postAd);\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`server running on port ${PORT}`);\r\n});\r\n\r\nexport default { app };\r\n"]}