/*
import chai from 'chai';
import chaiHttp from 'chai-http';
import app from '../src/app';
import fakeData from './faker/fake';


chai.use(chaiHttp);

chai.should();
const expect = chai.expect();


describe('Admin Activities', () => {
  it('should enable Admin to delete a specific posted AD record', (done) => {
    chai.request(app)
      .delete('/api/v1/car/:car_id/')
      .send(fakeData.admin)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.should.have.property('data').equal('Car Ad successfully deleted');
        done();
      });
  });

  it('should enable Admin to delete a specific posted AD record', (done) => {
    const adStatus = (base) => {
      if (base === 'sold' || base === 'available') {
        return true;
      }
      return false;
    };

    chai.request(app)
      .delete('/api/v1/car/:car_id/')
      .send(fakeData.admin)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.data.should.be.a('array');
        res.body.data[0].should.be.a('object');
        const firstItem = res.body.data[0];
        expect(firstItem)
          .to.have.nested.property('body.data[0]')
          .that.includes.all.keys(['id', 'owner', 'created_on', 'state', 'status',
            'price', 'manufacturer', 'model', 'body_type']);
        firstItem.id.should.be.a('integer');
        firstItem.owner.should.be.a('integer');
        firstItem.created_on.should.be.a('string');
        firstItem.state.should.be.a('string');
        expect(adStatus(firstItem.status)).to.equal(true);
        firstItem.price.should.be.a('float');
        firstItem.manufacturer.should.be.a('float');
        firstItem.model.should.be.a('string');
        firstItem.body_type.should.be.a('float');
        done();
        done();
      });
  });
});
*/"use strict";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluX3Rlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiL2hvbWUvc2FtaS9Eb2N1bWVudHMvQXV0b01hcnQvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpSHR0cCBmcm9tICdjaGFpLWh0dHAnO1xuaW1wb3J0IGFwcCBmcm9tICcuLi9zcmMvYXBwJztcbmltcG9ydCBmYWtlRGF0YSBmcm9tICcuL2Zha2VyL2Zha2UnO1xuXG5cbmNoYWkudXNlKGNoYWlIdHRwKTtcblxuY2hhaS5zaG91bGQoKTtcbmNvbnN0IGV4cGVjdCA9IGNoYWkuZXhwZWN0KCk7XG5cblxuZGVzY3JpYmUoJ0FkbWluIEFjdGl2aXRpZXMnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgZW5hYmxlIEFkbWluIHRvIGRlbGV0ZSBhIHNwZWNpZmljIHBvc3RlZCBBRCByZWNvcmQnLCAoZG9uZSkgPT4ge1xuICAgIGNoYWkucmVxdWVzdChhcHApXG4gICAgICAuZGVsZXRlKCcvYXBpL3YxL2Nhci86Y2FyX2lkLycpXG4gICAgICAuc2VuZChmYWtlRGF0YS5hZG1pbilcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3N0YXR1cycpLmVxdWFsKDIwMCk7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdkYXRhJykuZXF1YWwoJ0NhciBBZCBzdWNjZXNzZnVsbHkgZGVsZXRlZCcpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBlbmFibGUgQWRtaW4gdG8gZGVsZXRlIGEgc3BlY2lmaWMgcG9zdGVkIEFEIHJlY29yZCcsIChkb25lKSA9PiB7XG4gICAgY29uc3QgYWRTdGF0dXMgPSAoYmFzZSkgPT4ge1xuICAgICAgaWYgKGJhc2UgPT09ICdzb2xkJyB8fCBiYXNlID09PSAnYXZhaWxhYmxlJykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgIC5kZWxldGUoJy9hcGkvdjEvY2FyLzpjYXJfaWQvJylcbiAgICAgIC5zZW5kKGZha2VEYXRhLmFkbWluKVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnc3RhdHVzJykuZXF1YWwoMjAwKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5zaG91bGQuYmUuYSgnYXJyYXknKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YVswXS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4gICAgICAgIGNvbnN0IGZpcnN0SXRlbSA9IHJlcy5ib2R5LmRhdGFbMF07XG4gICAgICAgIGV4cGVjdChmaXJzdEl0ZW0pXG4gICAgICAgICAgLnRvLmhhdmUubmVzdGVkLnByb3BlcnR5KCdib2R5LmRhdGFbMF0nKVxuICAgICAgICAgIC50aGF0LmluY2x1ZGVzLmFsbC5rZXlzKFsnaWQnLCAnb3duZXInLCAnY3JlYXRlZF9vbicsICdzdGF0ZScsICdzdGF0dXMnLFxuICAgICAgICAgICAgJ3ByaWNlJywgJ21hbnVmYWN0dXJlcicsICdtb2RlbCcsICdib2R5X3R5cGUnXSk7XG4gICAgICAgIGZpcnN0SXRlbS5pZC5zaG91bGQuYmUuYSgnaW50ZWdlcicpO1xuICAgICAgICBmaXJzdEl0ZW0ub3duZXIuc2hvdWxkLmJlLmEoJ2ludGVnZXInKTtcbiAgICAgICAgZmlyc3RJdGVtLmNyZWF0ZWRfb24uc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICBmaXJzdEl0ZW0uc3RhdGUuc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICBleHBlY3QoYWRTdGF0dXMoZmlyc3RJdGVtLnN0YXR1cykpLnRvLmVxdWFsKHRydWUpO1xuICAgICAgICBmaXJzdEl0ZW0ucHJpY2Uuc2hvdWxkLmJlLmEoJ2Zsb2F0Jyk7XG4gICAgICAgIGZpcnN0SXRlbS5tYW51ZmFjdHVyZXIuc2hvdWxkLmJlLmEoJ2Zsb2F0Jyk7XG4gICAgICAgIGZpcnN0SXRlbS5tb2RlbC5zaG91bGQuYmUuYSgnc3RyaW5nJyk7XG4gICAgICAgIGZpcnN0SXRlbS5ib2R5X3R5cGUuc2hvdWxkLmJlLmEoJ2Zsb2F0Jyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xufSk7XG4qL1xuIl19
var cov_flcmm6adm=function(){var path="/home/sami/Documents/AutoMart/test/admin_test.js";var hash="4865f696a6e81a18083225b5743d13e2f6723738";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sami/Documents/AutoMart/test/admin_test.js",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4865f696a6e81a18083225b5743d13e2f6723738"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();