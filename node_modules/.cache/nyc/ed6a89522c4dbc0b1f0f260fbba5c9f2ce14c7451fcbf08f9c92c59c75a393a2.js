/*
import chai from 'chai';
import chaiHttp from 'chai-http';
import app from '../src/app';
import fakeData from './faker/fake';
import authData from './user_authentication_test';


chai.use(chaiHttp);

chai.should();
const expect = chai.expect();

let orderId;
const { token } = authData;


describe('User Buyer Activities', () => {
  it('should NOT let unauthenticated user (buyer) to make a purchase order', (done) => {
    chai.request(app)
      .post('/api/v1/order/')
      .send(fakeData.purchaseOrder)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(404);
        res.body.data.should.have.property('message').equal('Unauthorised User!');
        done();
      });
  });

  it('should let authenticated user (buyer) to make a purchase order', (done) => {
    chai.request(app)
      .post('/api/v1/order/')
      .send(fakeData.purchaseOrder)
      .set('authorization', token)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.data.should.have.property('message').equal('Purchase order Placed successfully!');
        expect(res)
          .to.have.nested.property('body.data[0]')
          .that.includes.all.keys(['id', 'car_id', 'created_on',
          'status', 'price', 'price_offered']);
        res.body.data.id.should.be.a('integer');
        res.body.data.car_id.should.be.a('integer');
        res.body.data.created_on.should.be.a('string');
        res.body.data.status.should.be.a('string');
        res.body.data.price.should.be.a('float');
        res.body.data.price_offered.should.be.a('float');
        orderId = res.body.data.id;
        done();
      });
  });

  it('should let authenticated user (buyer) to Update the price of a purchase order', (done) => {
    chai.request(app)
      .patch(`/api/v1/order/${orderId}/price`)
      .send(fakeData.updateOrder)
      .set('authorization', token)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.data.should.have.property('message').equal('Purchase order updated successfully!');
        expect(res)
          .to.have.nested.property('body.data[0]')
          .that.includes.all.keys(['id', 'car_id', 'status', 'old_price_offered',
          'new_price_offered']);
        res.body.data.id.should.be.a('integer');
        res.body.data.car_id.should.be.a('integer');
        res.body.data.status.should.be.a('string');
        res.body.data.old_price_offered.should.be.a('float');
        res.body.data.new_price_offered.should.be.a('float');
        done();
      });
  });
});
*/"use strict";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfYnV5ZXJfdGVzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvaG9tZS9zYW1pL0RvY3VtZW50cy9BdXRvTWFydC90ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiLypcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlIdHRwIGZyb20gJ2NoYWktaHR0cCc7XG5pbXBvcnQgYXBwIGZyb20gJy4uL3NyYy9hcHAnO1xuaW1wb3J0IGZha2VEYXRhIGZyb20gJy4vZmFrZXIvZmFrZSc7XG5pbXBvcnQgYXV0aERhdGEgZnJvbSAnLi91c2VyX2F1dGhlbnRpY2F0aW9uX3Rlc3QnO1xuXG5cbmNoYWkudXNlKGNoYWlIdHRwKTtcblxuY2hhaS5zaG91bGQoKTtcbmNvbnN0IGV4cGVjdCA9IGNoYWkuZXhwZWN0KCk7XG5cbmxldCBvcmRlcklkO1xuY29uc3QgeyB0b2tlbiB9ID0gYXV0aERhdGE7XG5cblxuZGVzY3JpYmUoJ1VzZXIgQnV5ZXIgQWN0aXZpdGllcycsICgpID0+IHtcbiAgaXQoJ3Nob3VsZCBOT1QgbGV0IHVuYXV0aGVudGljYXRlZCB1c2VyIChidXllcikgdG8gbWFrZSBhIHB1cmNoYXNlIG9yZGVyJywgKGRvbmUpID0+IHtcbiAgICBjaGFpLnJlcXVlc3QoYXBwKVxuICAgICAgLnBvc3QoJy9hcGkvdjEvb3JkZXIvJylcbiAgICAgIC5zZW5kKGZha2VEYXRhLnB1cmNoYXNlT3JkZXIpXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdzdGF0dXMnKS5lcXVhbCg0MDQpO1xuICAgICAgICByZXMuYm9keS5kYXRhLnNob3VsZC5oYXZlLnByb3BlcnR5KCdtZXNzYWdlJykuZXF1YWwoJ1VuYXV0aG9yaXNlZCBVc2VyIScpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBsZXQgYXV0aGVudGljYXRlZCB1c2VyIChidXllcikgdG8gbWFrZSBhIHB1cmNoYXNlIG9yZGVyJywgKGRvbmUpID0+IHtcbiAgICBjaGFpLnJlcXVlc3QoYXBwKVxuICAgICAgLnBvc3QoJy9hcGkvdjEvb3JkZXIvJylcbiAgICAgIC5zZW5kKGZha2VEYXRhLnB1cmNoYXNlT3JkZXIpXG4gICAgICAuc2V0KCdhdXRob3JpemF0aW9uJywgdG9rZW4pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdzdGF0dXMnKS5lcXVhbCgyMDApO1xuICAgICAgICByZXMuYm9keS5kYXRhLnNob3VsZC5oYXZlLnByb3BlcnR5KCdtZXNzYWdlJykuZXF1YWwoJ1B1cmNoYXNlIG9yZGVyIFBsYWNlZCBzdWNjZXNzZnVsbHkhJyk7XG4gICAgICAgIGV4cGVjdChyZXMpXG4gICAgICAgICAgLnRvLmhhdmUubmVzdGVkLnByb3BlcnR5KCdib2R5LmRhdGFbMF0nKVxuICAgICAgICAgIC50aGF0LmluY2x1ZGVzLmFsbC5rZXlzKFsnaWQnLCAnY2FyX2lkJywgJ2NyZWF0ZWRfb24nLFxuICAgICAgICAgICdzdGF0dXMnLCAncHJpY2UnLCAncHJpY2Vfb2ZmZXJlZCddKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5pZC5zaG91bGQuYmUuYSgnaW50ZWdlcicpO1xuICAgICAgICByZXMuYm9keS5kYXRhLmNhcl9pZC5zaG91bGQuYmUuYSgnaW50ZWdlcicpO1xuICAgICAgICByZXMuYm9keS5kYXRhLmNyZWF0ZWRfb24uc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICByZXMuYm9keS5kYXRhLnN0YXR1cy5zaG91bGQuYmUuYSgnc3RyaW5nJyk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEucHJpY2Uuc2hvdWxkLmJlLmEoJ2Zsb2F0Jyk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEucHJpY2Vfb2ZmZXJlZC5zaG91bGQuYmUuYSgnZmxvYXQnKTtcbiAgICAgICAgb3JkZXJJZCA9IHJlcy5ib2R5LmRhdGEuaWQ7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGxldCBhdXRoZW50aWNhdGVkIHVzZXIgKGJ1eWVyKSB0byBVcGRhdGUgdGhlIHByaWNlIG9mIGEgcHVyY2hhc2Ugb3JkZXInLCAoZG9uZSkgPT4ge1xuICAgIGNoYWkucmVxdWVzdChhcHApXG4gICAgICAucGF0Y2goYC9hcGkvdjEvb3JkZXIvJHtvcmRlcklkfS9wcmljZWApXG4gICAgICAuc2VuZChmYWtlRGF0YS51cGRhdGVPcmRlcilcbiAgICAgIC5zZXQoJ2F1dGhvcml6YXRpb24nLCB0b2tlbilcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3N0YXR1cycpLmVxdWFsKDIwMCk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcXVhbCgnUHVyY2hhc2Ugb3JkZXIgdXBkYXRlZCBzdWNjZXNzZnVsbHkhJyk7XG4gICAgICAgIGV4cGVjdChyZXMpXG4gICAgICAgICAgLnRvLmhhdmUubmVzdGVkLnByb3BlcnR5KCdib2R5LmRhdGFbMF0nKVxuICAgICAgICAgIC50aGF0LmluY2x1ZGVzLmFsbC5rZXlzKFsnaWQnLCAnY2FyX2lkJywgJ3N0YXR1cycsICdvbGRfcHJpY2Vfb2ZmZXJlZCcsXG4gICAgICAgICAgJ25ld19wcmljZV9vZmZlcmVkJ10pO1xuICAgICAgICByZXMuYm9keS5kYXRhLmlkLnNob3VsZC5iZS5hKCdpbnRlZ2VyJyk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuY2FyX2lkLnNob3VsZC5iZS5hKCdpbnRlZ2VyJyk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuc3RhdHVzLnNob3VsZC5iZS5hKCdzdHJpbmcnKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5vbGRfcHJpY2Vfb2ZmZXJlZC5zaG91bGQuYmUuYSgnZmxvYXQnKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5uZXdfcHJpY2Vfb2ZmZXJlZC5zaG91bGQuYmUuYSgnZmxvYXQnKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xufSk7XG4qL1xuIl19
var cov_1h9nx84qxc=function(){var path="/home/sami/Documents/AutoMart/test/user_buyer_test.js";var hash="06ad89b831a0a8621d85bb66d229d77ebc6d8c1f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sami/Documents/AutoMart/test/user_buyer_test.js",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"06ad89b831a0a8621d85bb66d229d77ebc6d8c1f"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();