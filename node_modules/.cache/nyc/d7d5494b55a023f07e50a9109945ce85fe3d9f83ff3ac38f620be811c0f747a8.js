"use strict";var cov_2jhi50u0dv=function(){var path="/home/sami/Documents/AutoMart/test/user_seller_test.js";var hash="e3f6c7b17c1f264f183d1d41a70c8006b910c04c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sami/Documents/AutoMart/test/user_seller_test.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:28}},"2":{start:{line:8,column:12},end:{line:8,column:51}},"3":{start:{line:10,column:16},end:{line:10,column:60}},"4":{start:{line:12,column:11},end:{line:12,column:56}},"5":{start:{line:14,column:14},end:{line:14,column:65}},"6":{start:{line:16,column:32},end:{line:16,column:93}},"7":{start:{line:18,column:39},end:{line:18,column:95}},"8":{start:{line:20,column:0},end:{line:20,column:43}},"9":{start:{line:22,column:0},end:{line:22,column:26}},"10":{start:{line:24,column:13},end:{line:24,column:36}},"11":{start:{line:26,column:10},end:{line:26,column:59}},"12":{start:{line:28,column:12},end:{line:28,column:54}},"13":{start:{line:31,column:0},end:{line:31,column:50}},"14":{start:{line:32,column:0},end:{line:272,column:3}},"15":{start:{line:33,column:2},end:{line:40,column:5}},"16":{start:{line:34,column:4},end:{line:39,column:7}},"17":{start:{line:35,column:6},end:{line:35,column:37}},"18":{start:{line:36,column:6},end:{line:36,column:57}},"19":{start:{line:37,column:6},end:{line:37,column:73}},"20":{start:{line:38,column:6},end:{line:38,column:13}},"21":{start:{line:41,column:2},end:{line:48,column:5}},"22":{start:{line:42,column:4},end:{line:47,column:7}},"23":{start:{line:43,column:6},end:{line:43,column:37}},"24":{start:{line:44,column:6},end:{line:44,column:57}},"25":{start:{line:45,column:6},end:{line:45,column:73}},"26":{start:{line:46,column:6},end:{line:46,column:13}},"27":{start:{line:49,column:2},end:{line:56,column:5}},"28":{start:{line:50,column:4},end:{line:55,column:7}},"29":{start:{line:51,column:6},end:{line:51,column:37}},"30":{start:{line:52,column:6},end:{line:52,column:57}},"31":{start:{line:53,column:6},end:{line:53,column:90}},"32":{start:{line:54,column:6},end:{line:54,column:13}},"33":{start:{line:273,column:15},end:{line:273,column:20}},"34":{start:{line:274,column:0},end:{line:274,column:30}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:97}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:32,column:35},end:{line:32,column:36}},loc:{start:{line:32,column:47},end:{line:272,column:1}},line:32},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:74},end:{line:33,column:75}},loc:{start:{line:33,column:90},end:{line:40,column:3}},line:33},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:68},end:{line:34,column:69}},loc:{start:{line:34,column:88},end:{line:39,column:5}},line:34},"4":{name:"(anonymous_4)",decl:{start:{line:41,column:82},end:{line:41,column:83}},loc:{start:{line:41,column:98},end:{line:48,column:3}},line:41},"5":{name:"(anonymous_5)",decl:{start:{line:42,column:115},end:{line:42,column:116}},loc:{start:{line:42,column:135},end:{line:47,column:5}},line:42},"6":{name:"(anonymous_6)",decl:{start:{line:49,column:97},end:{line:49,column:98}},loc:{start:{line:49,column:113},end:{line:56,column:3}},line:49},"7":{name:"(anonymous_7)",decl:{start:{line:50,column:106},end:{line:50,column:107}},loc:{start:{line:50,column:126},end:{line:55,column:5}},line:50}},branchMap:{"0":{loc:{start:{line:18,column:46},end:{line:18,column:94}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:94}}],line:18},"1":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"e3f6c7b17c1f264f183d1d41a70c8006b910c04c"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_2jhi50u0dv.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2jhi50u0dv.s[1]++;exports["default"]=void 0;var _chai=(cov_2jhi50u0dv.s[2]++,_interopRequireDefault(require("chai")));var _chaiHttp=(cov_2jhi50u0dv.s[3]++,_interopRequireDefault(require("chai-http")));var _app=(cov_2jhi50u0dv.s[4]++,_interopRequireDefault(require("../src/app")));var _assume=(cov_2jhi50u0dv.s[5]++,_interopRequireDefault(require("./assumed/assume")));var _user_authentication_test=(cov_2jhi50u0dv.s[6]++,_interopRequireDefault(require("./user_authentication_test")));function _interopRequireDefault(obj){cov_2jhi50u0dv.f[0]++;cov_2jhi50u0dv.s[7]++;return(cov_2jhi50u0dv.b[1][0]++,obj)&&(cov_2jhi50u0dv.b[1][1]++,obj.__esModule)?(cov_2jhi50u0dv.b[0][0]++,obj):(cov_2jhi50u0dv.b[0][1]++,{"default":obj});}cov_2jhi50u0dv.s[8]++;_chai["default"].use(_chaiHttp["default"]);cov_2jhi50u0dv.s[9]++;_chai["default"].should();var expect=(cov_2jhi50u0dv.s[10]++,_chai["default"].expect);var api=(cov_2jhi50u0dv.s[11]++,_chai["default"].request('http://localhost:5000'));var token=(cov_2jhi50u0dv.s[12]++,_user_authentication_test["default"].token);// eslint-disable-next-line import/no-mutable-exports
var carId;cov_2jhi50u0dv.s[13]++;console.log(_user_authentication_test["default"]);cov_2jhi50u0dv.s[14]++;describe('User Seller Activities',function(){cov_2jhi50u0dv.f[1]++;cov_2jhi50u0dv.s[15]++;it('should NOT let unauthenticated user (seller) create a new Advert ',function(done){cov_2jhi50u0dv.f[2]++;cov_2jhi50u0dv.s[16]++;api.post('/api/v1/car/').send(_assume["default"].newAdvert).end(function(err,res){cov_2jhi50u0dv.f[3]++;cov_2jhi50u0dv.s[17]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[18]++;res.body.should.have.property('status').equal(403);cov_2jhi50u0dv.s[19]++;res.body.should.have.property('error').equal('Unauthorised User!');cov_2jhi50u0dv.s[20]++;done();});});cov_2jhi50u0dv.s[21]++;it('should NOT let invalid Token user to post new Advert/affect posted Advert',function(done){cov_2jhi50u0dv.f[4]++;cov_2jhi50u0dv.s[22]++;api.post('/api/v1/car').set('authorization','represents invalid toke').send(_assume["default"].newAdvert).end(function(err,res){cov_2jhi50u0dv.f[5]++;cov_2jhi50u0dv.s[23]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[24]++;res.body.should.have.property('status').equal(403);cov_2jhi50u0dv.s[25]++;res.body.should.have.property('error').equal('Unauthorised User!');cov_2jhi50u0dv.s[26]++;done();});});cov_2jhi50u0dv.s[27]++;it('should NOT let Authenticated User (Seller) to post new Advert without MANUFACTURER input',function(done){cov_2jhi50u0dv.f[6]++;cov_2jhi50u0dv.s[28]++;api.post('/api/v1/car').set('authorization',token).send(_assume["default"].noManufacturerAdvert).end(function(err,res){cov_2jhi50u0dv.f[7]++;cov_2jhi50u0dv.s[29]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[30]++;res.body.should.have.property('status').equal(401);cov_2jhi50u0dv.s[31]++;res.body.should.have.property('error').equal('manufacturer field cannot be empty!');cov_2jhi50u0dv.s[32]++;done();});});/*
    it('should NOT let Authenticated User (Seller) to post new Advert without MODEL input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noModelAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('model field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without BODY TYPE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noBodyTypeAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('bodyType field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without YEAR input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noYearAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('year field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without STATE(Condition) input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noStateAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('state field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without TRANSMISSION input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noTransmissionAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('transmission field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without Veh-Ins-Num input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noVINAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('vehicleInspectionNumber field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without LICENCE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noLicenceAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('licence field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without MILEAGE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noMileageAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('mileage field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without DESCRIPTION input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noDescriptionAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('description field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without PRICE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noPriceAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('price field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without CAR IMAGE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.newAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('Upload at least one image!');
          done();
        });
    });
  
    it('should NOT let Authenticated User (Seller) to post new Advert without a valid image file', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.newAdvert)
        .attach('carImage', './assumed/blank.pdf')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.data.should.have.property('error').equal('Please provide a valid image file!');
          done();
        });
    });
  
    it('should let authenticated user (seller) to create new Advert', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.newAdvert)
        .attach('carImage', './assumed/blank.pdf')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(201);
          res.body.data.should.be.a('object');
          expect(res)
            .to.have.nested.property('body.data')
            .that.includes.all.keys(['id', 'email', 'created_on', 'manufacturer', 'model',
            'price', 'state', 'status', 'imageGallery']);
          res.body.data.id.should.be.a('number');
          res.body.data.email.should.be.a('string');
          res.body.data.created_on.should.be.a('string');
          res.body.data.manufacturer.should.be.a('string');
          res.body.data.model.should.be.a('string');
          res.body.data.price.should.be.a('number');
          res.body.data.state.should.be.a('string');
          res.body.data.status.should.be.a('string');
          res.body.data.imageGallery.should.be.a('array');
          res.body.data.should.have.property('message').equal('Your Ad has been added successfully!');
          carId = res.body.data.id;
          done();
        });
    });
  /*
    it('Should let Authenticated User (seller) to mark his/her posted Advert as sold', (done) => {
      api
        .patch(`/api/v1/car/${carId}/status`)
        .send(fakeData.updateAdvert)
        .set('authorization', token)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.data.should.have.property('message').equal('Advert updated!');
          res.body.data.should.have.property('status').equal(fakeData.updateAdvert.sold);
          done();
        });
    });
  
    it('Should let Authenticated User (seller) to update the price of his/her posted AD.', (done) => {
     api
        .patch(`/api/v1/car/${carId}/price`)
        .send(fakeData.updateAdvert)
        .set('authorization', token)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.data.should.have.property('message').equal('Advert updated!');
          res.body.data.should.have.property('price').equal(fakeData.updateAdvert.price);
          done();
        });
    });
    */});var _default=(cov_2jhi50u0dv.s[33]++,carId);cov_2jhi50u0dv.s[34]++;exports["default"]=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,