{"version":3,"sources":["signUp.js"],"names":["app","use","bodyParser","json","urlencoded","extended","text","type","signUp","req","res","body","username","firstName","lastName","address","email","password","verify","mailformat","undefined","status","send","error","success","field","match","length","emailSearch","db","users","find","user","userNameSearch","bcrypt","hash","id","parseInt","token","jwt","sign","process","env","SECRET_KEY","expiresIn","newUser","first_name","last_name","is_admin","created_on","Date","push","cookie","data","message"],"mappings":"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","sourceRoot":"/home/sami/Documents/AutoMart/src/ctl","sourcesContent":["import express from 'express';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport bodyParser from 'body-parser';\nimport db from '../db/db';\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.text());\napp.use(bodyParser.json({ type: 'application/json' }));\n\n\nconst signUp = (req, res) => {\n  let {\n    username, firstName, lastName, address,\n  } = req.body;\n  // eslint-disable-next-line prefer-const\n\n  const {\n    email, password, verify,\n  } = req.body;\n  const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (undefined === username || username === '') {\n    return res.status(401).send({\n      status: 401,\n      error: 'Please Provide a Username',\n      success: 'false',\n      field: 'username',\n    });\n  }\n\n  if (undefined === email || !email.match(mailformat)) {\n    return res.status(401).send({\n      status: 401,\n      error: 'Please Enter a Valid Email',\n      success: 'false',\n      field: 'email',\n    });\n  }\n\n  if (undefined === firstName || firstName === ' ') {\n    return res.status(401).send({\n      status: 401,\n      error: 'Please Enter your First Name',\n      success: 'false',\n      field: 'first-name',\n    });\n  }\n\n\n  if (undefined === lastName || lastName === ' ') {\n    return res.status(401).send({\n      status: 401,\n      error: 'Please Enter your Last Name',\n      success: 'false',\n      field: 'last-name',\n    });\n  }\n\n  if (undefined === address || address === ' ') {\n    return res.status(401).send({\n      status: 401,\n      error: 'Please Enter your Address',\n      success: 'false',\n      field: 'username',\n    });\n  }\n\n  if (undefined === password || password === ' ') {\n    return res.status(401).send({\n      status: 401,\n      error: 'Please Provide a Password',\n      success: 'false',\n      field: 'password',\n    });\n  }\n\n  if (undefined !== password && password.length < 8) {\n    return res.status(401).send({\n      status: 401,\n      error: 'Password is Too Short!',\n      success: 'false',\n      field: 'password',\n    });\n  }\n\n  if (verify !== password) {\n    return res.status(401).send({\n      status: 401,\n      error: 'Verifiable Password Does not Match!',\n      success: 'false',\n      field: 'password',\n    });\n  }\n\n  const emailSearch = db.users.find(user => user.email === email);\n  const userNameSearch = db.users.find(user => user.username === username);\n  if (emailSearch) {\n    return res.status(401).send({\n      status: 401,\n      error: 'Email is associated with another user!',\n      success: 'false',\n      field: 'email',\n    });\n  }\n  if (userNameSearch) {\n    return res.status(401).send({\n      status: 401,\n      error: 'Username already taken by another user!',\n      success: 'false',\n      field: 'username',\n    });\n  }\n  bcrypt.hash(password, 10, (error, hash) => {\n    if (error) {\n      return res.status(401).send({\n        status: 404,\n        error,\n        field: 'password',\n      });\n    }\n    const id = parseInt(db.users.length + 1, 10);\n    const token = jwt.sign({\n      email,\n      hash,\n      id,\n    }, process.env.SECRET_KEY, { expiresIn: '1h' });\n\n    const newUser = {\n      id,\n      email,\n      first_name: firstName,\n      last_name: lastName,\n      password: hash,\n      address,\n      is_admin: false,\n      created_on: new Date(),\n    };\n    db.users.push(newUser);\n\n    res.cookie('username', username);\n    res.cookie('token', token);\n    return res.status(201).send({\n      status: 201,\n      data: {\n        id: newUser.id,\n        token,\n        first_name: newUser.first_name,\n        last_name: newUser.last_name,\n        email: newUser.email,\n        success: 'true',\n        message: 'Your Signed up was successful',\n      },\n    });\n  });\n  return false;\n};\n\nexport default signUp;\n"]}