{"version":3,"sources":["admin.js"],"names":["app","use","bodyParser","json","urlencoded","extended","text","type","employJwt","req","res","authorization","headers","decoded","jwt","verify","process","env","SECRET_KEY","userData","error","status","send","success","Admin","checkAdmin","db","users","map","user","id","is_admin","data","cars","params","carId","isNaN","parseInt","field","isAdmin","find","counter","findIndex","car","searchedAd","splice","message"],"mappings":"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","sourceRoot":"/home/sami/Documents/AutoMart/src/ctl","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport jwt from 'jsonwebtoken';\nimport db from '../db/db';\n\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.text());\napp.use(bodyParser.json({ type: 'application/json' }));\n\nconst employJwt = (req, res) => {\n  const { authorization } = req.headers;\n  try {\n    const decoded = jwt.verify(authorization, process.env.SECRET_KEY);\n    req.userData = decoded;\n  } catch (error) {\n    return res.status(403).send({\n      status: 403,\n      error: 'Unauthorised User!',\n      success: 'false',\n    });\n  }\n  return false;\n};\n\n\nclass Admin {\n  static viewAll(req, res) {\n    employJwt(req, res);\n    let checkAdmin = 0;\n    db.users.map((user) => {\n      if (user.id === req.userData.id && user.is_admin === true) {\n        checkAdmin = 1;\n      }\n      return false;\n    });\n    if (checkAdmin === 1) {\n      return res.status(200).send({\n        status: 200,\n        data: db.cars,\n        success: 'true',\n      });\n    // eslint-disable-next-line no-else-return\n    } else {\n      return res.status(403).send({\n        status: 403,\n        error: 'You need Admin priviledges to view this set of data!',\n        success: 'false',\n      });\n    }\n  }\n\n  static delete(req, res) {\n    employJwt(req, res);\n    if (!req.params.carId || isNaN(parseInt(req.params.carId, 10))) {\n      return res.status(401).send({\n        status: 401,\n        error: 'Please provide a valid Ad reference!',\n        success: 'false',\n        field: 'order',\n      });\n    }\n    const isAdmin = db.users.find(user => user.id === req.userData.id && user.is_admin === true);\n    if (isAdmin) {\n      const counter = db.cars.findIndex(car => car.id === parseInt(req.params.carId, 10));\n      const searchedAd = db.cars.find(car => car.id === parseInt(req.params.carId, 10));\n      if (searchedAd) {\n        db.cars.splice(counter, 1);\n        return res.status(200).send({\n          status: 200,\n          data: {\n            message: 'Car Ad successfully deleted!',\n            success: 'true',\n          },\n        });\n      // eslint-disable-next-line no-else-return\n      } else {\n        return res.status(404).send({\n          status: 404,\n          error: 'Ad not found!',\n          success: 'false',\n        });\n      }\n    // eslint-disable-next-line no-else-return\n    } else {\n      return res.status(403).send({\n        status: 403,\n        error: 'You need Admin priviledges to delete this Ad',\n        success: 'false',\n      });\n    }\n  }\n}\n\nexport default Admin;\n"]}