{"version":3,"sources":["user_seller_test.js"],"names":["chai","use","chaiHttp","should","expect","api","request","data","fs","readFileSync","__dirname","token","toString","carId","describe","it","done","post","send","assumedData","newAdvert","end","err","res","body","be","a","have","property","equal","set","noManufacturerAdvert","noModelAdvert","noBodyTypeAdvert","noYearAdvert","noStateAdvert","noTransmissionAdvert","noVINAdvert","noLicenceAdvert","noMileageAdvert","noDescriptionAdvert","noPriceAdvert","attach","to","nested","that","includes","all","keys","id","email","created_on","manufacturer","model","price","state","status","imageGallery"],"mappings":"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","sourceRoot":"/home/sami/Documents/AutoMart/test","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport fs from 'fs';\nimport util from 'util';\n// eslint-disable-next-line no-unused-vars\nimport app from '../src/app';\nimport assumedData from './assumed/assume';\n\n\nchai.use(chaiHttp);\n\nchai.should();\nconst { expect } = chai;\n\nconst api = chai.request('http://localhost:5000');\n\nconst data = fs.readFileSync(`${__dirname}/assumed/token.txt`);\nconst token = data.toString();\n// eslint-disable-next-line import/no-mutable-exports\nlet carId;\n\n\ndescribe('User Seller Activities', () => {\n  it('should NOT let unauthenticated user (seller) create a new Advert ', (done) => {\n    api\n      .post('/api/v1/car/')\n      .send(assumedData.newAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('error').equal('Unauthorised User!');\n        done();\n      });\n  });\n\n  it('should NOT let invalid Token user to post new Advert/affect posted Advert', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', 'represents invalid toke')\n      .send(assumedData.newAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('error').equal('Unauthorised User!');\n        done();\n      });\n  });\n\n  it('should NOT let Authenticated User (Seller) to post new Advert without MANUFACTURER input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noManufacturerAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('manufacturer field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without MODEL input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noModelAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('model field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without BODY TYPE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noBodyTypeAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('bodyType field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without YEAR input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noYearAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('year field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without STATE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noStateAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('state field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without TRANSMISSION input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noTransmissionAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('transmission field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without Veh-Ins-Num input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noVINAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error')\n          .equal('vehicleInspectionNumber field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without LICENCE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noLicenceAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('licence field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without MILEAGE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noMileageAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('mileage field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without DESCRIPTION input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noDescriptionAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('description field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without PRICE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.noPriceAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('price field cannot be empty!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without CAR IMAGE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.newAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('Upload at least one image!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without a valid image file', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.newAdvert)\n      .attach('carImage', './assumed/blank.pdf')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.data.should.have.property('error').equal('Please provide a valid image file!');\n        done();\n      });\n  });\n\n  it('should let Auth user (seller) to create new Advert', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .send(assumedData.newAdvert)\n      .attach('carImage', './assumed/blank.pdf')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(201);\n        res.body.data.should.be.a('object');\n        expect(res)\n          .to.have.nested.property('body.data')\n          .that.includes.all.keys(['id', 'email', 'created_on', 'manufacturer', 'model',\n            'price', 'state', 'status', 'imageGallery']);\n        res.body.data.id.should.be.a('number');\n        res.body.data.email.should.be.a('string');\n        res.body.data.created_on.should.be.a('string');\n        res.body.data.manufacturer.should.be.a('string');\n        res.body.data.model.should.be.a('string');\n        res.body.data.price.should.be.a('number');\n        res.body.data.state.should.be.a('string');\n        res.body.data.status.should.be.a('string');\n        res.body.data.imageGallery.should.be.a('array');\n        res.body.data.should.have.property('message').equal('Your Ad has been added successfully!');\n        carId = res.body.data.id;\n        done();\n      });\n  });\n/*\n  it('Should let Auth User (seller) to mark his/her posted Advert as sold', (done) => {\n    api\n      .patch(`/api/v1/car/${carId}/status`)\n      .send(fakeData.updateAdvert)\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.data.should.have.property('message').equal('Advert updated!');\n        res.body.data.should.have.property('status').equal(fakeData.updateAdvert.sold);\n        done();\n      });\n  });\n\n  it('Should let Auth User (seller) to update the price of his/her posted AD.', (done) => {\n   api\n      .patch(`/api/v1/car/${carId}/price`)\n      .send(fakeData.updateAdvert)\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.data.should.have.property('message').equal('Advert updated!');\n        res.body.data.should.have.property('price').equal(fakeData.updateAdvert.price);\n        done();\n      });\n  });\n  */\n});\n\nexport default carId;\n"]}