{"version":3,"sources":["user_seller_test.js"],"names":["chai","use","chaiHttp","should","expect","api","request","carId","token","post","send","assumedData","sellerUser","end","err","res","console","log","body","describe","it","done","newAdvert","be","a","have","property","equal","set","field","manufacturer","model","bodyType","year","mileage","state","transmission","vehicleInspectionNumber","licence","description","price","attach","__dirname","patch","newPrice","invalidPrice"],"mappings":"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","sourceRoot":"/home/sami/Documents/AutoMart/test","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport fs from 'fs';\nimport util from 'util';\n// eslint-disable-next-line no-unused-vars\nimport app from '../src/app';\nimport assumedData from './assumed/assume';\n\n\nchai.use(chaiHttp);\n\nchai.should();\nconst { expect } = chai;\n\nconst api = chai.request('http://localhost:5000');\n\n//const data = fs.readFileSync(`${__dirname}/assumed/token.txt`);\n//const token = data.toString();\n// eslint-disable-next-line import/no-mutable-exports\nlet carId;\nlet token;\n\n\napi\n  .post('/api/v1/signup')\n  .send(assumedData.sellerUser)\n  .end((err, res) => {\n    // eslint-disable-next-line prefer-destructuring\n    console.log(res.body.token);\n  });\n  console.log(token);\n\n\ndescribe('User Seller Activities', () => {\n  it('should NOT let unauthenticated user (seller) create a new Advert ', (done) => {\n    api\n      .post('/api/v1/car/')\n      .send(assumedData.newAdvert)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('error').equal('Unauthorised User!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let invalid Token user to post new Advert/affect posted Advert', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', 'invalidtoken')\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('error').equal('Unauthorised User!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Authenticated User (Seller) to post new Advert without MANUFACTURER input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('manufacturer field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without MODEL input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('model field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without BODY TYPE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('body type field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without YEAR input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('year field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n  \n  it('Should NOT let Auth User (Seller) to post new Advert without STATE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('state field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without TRANSMISSION input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('transmission field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without Veh-Ins-Num input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('vehicle inspection number field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without LICENCE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('licence field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without MILEAGE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('mileage field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without DESCRIPTION input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('description field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) to post new Advert without PRICE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('price field cannot be empty!');\n        res.body.should.have.property('success').equal('false');\n        done();\n      });\n  });\n\n\n  it('should NOT let Auth User (Seller) to post new Advert without CAR IMAGE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('Upload at least one image!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) to post new Advert without valid IMAGE format', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/blank.pdf`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(422);\n        res.body.should.have.property('error').equal('Please provide a valid image file!');\n        done();\n      });\n  });\n\n  /*\n  it('should let Auth User (Seller) to post new Advert with CAR IMAGE input', (done) => {\n    api\n      .post('/api/v1/car')\n      .set('authorization', token)\n      .set('Accept', 'application.json')\n      .field('manufacturer', assumedData.newAdvert.manufacturer)\n      .field('model', assumedData.newAdvert.model)\n      .field('bodyType', assumedData.newAdvert.bodyType)\n      .field('year', assumedData.newAdvert.year)\n      .field('mileage', assumedData.newAdvert.mileage)\n      .field('state', assumedData.newAdvert.state)\n      .field('transmission', assumedData.newAdvert.transmission)\n      .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)\n      .field('licence', assumedData.newAdvert.licence)\n      .field('description', assumedData.newAdvert.description)\n      .field('price', assumedData.newAdvert.price)\n      .attach('carImage', `${__dirname}/assumed/download.png`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(201);\n        res.body.data.should.be.a('object');\n        expect(res)\n          .to.have.nested.property('body.data')\n          .that.includes.all.keys(['id', 'email', 'created_on', 'manufacturer', 'model',\n            'price', 'state', 'status', 'imageGallery']);\n        res.body.data.id.should.be.a('number');\n        res.body.data.email.should.be.a('string');\n        res.body.data.created_on.should.be.a('string');\n        res.body.data.manufacturer.should.be.a('string');\n        res.body.data.model.should.be.a('string');\n        res.body.data.price.should.be.a('number');\n        res.body.data.state.should.be.a('string');\n        res.body.data.status.should.be.a('string');\n        res.body.data.imageGallery.should.be.a('array');\n        res.body.data.should.have.property('message').equal('Your Ad has been added successfully!');\n        carId = res.body.data.id;\n        done();\n      });\n  });\n*/\n\n  it('Should NOT let Auth User (Seller) change price of sold or not owned AD', (done) => {\n    api\n      .patch('/api/v1/car/1/price')\n      .set('authorization', token)\n      .send(assumedData.newPrice)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('error').equal('You cannot change the price of this Ad!');\n        done();\n      });\n  });\n\n  it('Should NOT let Auth User (Seller) change Ad price to invalid value ', (done) => {\n    api\n      .patch(`/api/v1/car/${carId}/price`)\n      .set('authorization', token)\n      .send(assumedData.invalidPrice)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.should.have.property('error').equal('Invalid Price value!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) change Ad price with invalid reference', (done) => {\n    api\n      .patch('/api/v1/car/:carId/price')\n      .set('authorization', token)\n      .send(assumedData.newPrice)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.should.have.property('error').equal('Invalid Param Request!');\n        done();\n      });\n  });\n/*\n  it('Should let Auth User (seller) to update the price of his/her posted AD.', (done) => {\n    api\n      .patch('/api/v1/car/1/price')\n      .set('authorization', token)\n      .send(assumedData.newPrice)\n      .end((err, res) => {\n        console.log(res.body)\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(201);\n        res.body.data.should.have.property('message').equal('New price Updated!');\n        res.body.data.should.have.property('price').equal(assumedData.newPrice.price);\n        done();\n      });\n  });\n/*\n   it('should NOT let Auth User (Seller) change Status to sold with invalid reference', (done) => {\n    api\n      .patch('/api/v1/car/:carId/status')\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.should.have.property('error').equal('Invalid Param Request!');\n        done();\n      });\n  });\n\n  it('should NOT let Auth User (Seller) change AD(not owned) status to sold', (done) => {\n    api\n      .patch(`/api/v1/car/${1}/price`)\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('error').equal('You are not allowed to mark this Ad as sold!');\n        done();\n      });\n  });\n\n\n  it('Should let Auth User (seller) to mark his/her posted Advert as sold', (done) => {\n    api\n      .patch(`/api/v1/car/${carId}/status`)\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        expect(res)\n          .to.have.nested.property('body.data')\n          .that.includes.all.keys(['id', 'email', 'created_on', 'manufacturer', 'model',\n            'price', 'state', 'status', 'message', 'success', 'field']);\n        res.body.data.id.should.be.a('number');\n        res.body.data.email.should.be.a('string');\n        res.body.data.created_on.should.be.a('string');\n        res.body.data.manufacturer.should.be.a('string');\n        res.body.data.model.should.be.a('string');\n        res.body.data.price.should.be.a('number');\n        res.body.data.state.should.be.a('string');\n        res.body.data.status.should.be.a('string');\n        res.body.data.message.should.be.a('string');\n        res.body.data.success.should.be.a('string');\n        res.body.should.have.property('status').equal(201);\n        res.body.data.should.have.property('message').equal('Car marked as sold!');\n        done();\n      });\n  });\n*/\n});\n\nexport default carId;\n"]}