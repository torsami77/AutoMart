"use strict";var cov_q8tzz1mqs=function(){var path="/home/sami/Documents/AutoMart/test/user_viewer_test.js";var hash="296260e6f1c5e139c746f8cde2a8a3034bba3c5a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sami/Documents/AutoMart/test/user_viewer_test.js",statementMap:{"0":{start:{line:3,column:12},end:{line:3,column:51}},"1":{start:{line:5,column:16},end:{line:5,column:60}},"2":{start:{line:7,column:10},end:{line:7,column:47}},"3":{start:{line:9,column:12},end:{line:9,column:51}},"4":{start:{line:11,column:11},end:{line:11,column:56}},"5":{start:{line:13,column:14},end:{line:13,column:65}},"6":{start:{line:15,column:39},end:{line:15,column:95}},"7":{start:{line:18,column:0},end:{line:18,column:43}},"8":{start:{line:20,column:0},end:{line:20,column:26}},"9":{start:{line:22,column:13},end:{line:22,column:36}},"10":{start:{line:24,column:10},end:{line:24,column:59}},"11":{start:{line:26,column:0},end:{line:281,column:3}},"12":{start:{line:27,column:2},end:{line:35,column:5}},"13":{start:{line:28,column:4},end:{line:34,column:7}},"14":{start:{line:29,column:6},end:{line:29,column:37}},"15":{start:{line:30,column:6},end:{line:30,column:57}},"16":{start:{line:31,column:6},end:{line:31,column:62}},"17":{start:{line:32,column:6},end:{line:32,column:91}},"18":{start:{line:33,column:6},end:{line:33,column:13}},"19":{start:{line:36,column:2},end:{line:44,column:5}},"20":{start:{line:37,column:4},end:{line:43,column:7}},"21":{start:{line:38,column:6},end:{line:38,column:37}},"22":{start:{line:39,column:6},end:{line:39,column:57}},"23":{start:{line:40,column:6},end:{line:40,column:62}},"24":{start:{line:41,column:6},end:{line:41,column:68}},"25":{start:{line:42,column:6},end:{line:42,column:13}},"26":{start:{line:45,column:2},end:{line:71,column:5}},"27":{start:{line:46,column:4},end:{line:70,column:7}},"28":{start:{line:47,column:6},end:{line:47,column:33}},"29":{start:{line:48,column:6},end:{line:48,column:37}},"30":{start:{line:49,column:6},end:{line:49,column:57}},"31":{start:{line:50,column:6},end:{line:50,column:61}},"32":{start:{line:51,column:6},end:{line:51,column:297}},"33":{start:{line:52,column:6},end:{line:52,column:45}},"34":{start:{line:53,column:6},end:{line:53,column:48}},"35":{start:{line:54,column:6},end:{line:54,column:53}},"36":{start:{line:55,column:6},end:{line:55,column:48}},"37":{start:{line:56,column:6},end:{line:56,column:49}},"38":{start:{line:57,column:6},end:{line:57,column:48}},"39":{start:{line:58,column:6},end:{line:58,column:55}},"40":{start:{line:59,column:6},end:{line:59,column:48}},"41":{start:{line:60,column:6},end:{line:60,column:51}},"42":{start:{line:61,column:6},end:{line:61,column:47}},"43":{start:{line:62,column:6},end:{line:62,column:50}},"44":{start:{line:63,column:6},end:{line:63,column:55}},"45":{start:{line:64,column:6},end:{line:64,column:66}},"46":{start:{line:65,column:6},end:{line:65,column:50}},"47":{start:{line:66,column:6},end:{line:66,column:54}},"48":{start:{line:67,column:6},end:{line:67,column:48}},"49":{start:{line:68,column:6},end:{line:68,column:47}},"50":{start:{line:69,column:6},end:{line:69,column:13}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:15,column:9},end:{line:15,column:31}},loc:{start:{line:15,column:37},end:{line:15,column:97}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:35},end:{line:26,column:36}},loc:{start:{line:26,column:47},end:{line:281,column:1}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:89},end:{line:27,column:90}},loc:{start:{line:27,column:105},end:{line:35,column:3}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:28,column:39},end:{line:28,column:40}},loc:{start:{line:28,column:59},end:{line:34,column:5}},line:28},"4":{name:"(anonymous_4)",decl:{start:{line:36,column:61},end:{line:36,column:62}},loc:{start:{line:36,column:77},end:{line:44,column:3}},line:36},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:35},end:{line:37,column:36}},loc:{start:{line:37,column:55},end:{line:43,column:5}},line:37},"6":{name:"(anonymous_6)",decl:{start:{line:45,column:58},end:{line:45,column:59}},loc:{start:{line:45,column:74},end:{line:71,column:3}},line:45},"7":{name:"(anonymous_7)",decl:{start:{line:46,column:34},end:{line:46,column:35}},loc:{start:{line:46,column:54},end:{line:70,column:5}},line:46}},branchMap:{"0":{loc:{start:{line:15,column:46},end:{line:15,column:94}},type:"cond-expr",locations:[{start:{line:15,column:70},end:{line:15,column:73}},{start:{line:15,column:76},end:{line:15,column:94}}],line:15},"1":{loc:{start:{line:15,column:46},end:{line:15,column:67}},type:"binary-expr",locations:[{start:{line:15,column:46},end:{line:15,column:49}},{start:{line:15,column:53},end:{line:15,column:67}}],line:15}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"296260e6f1c5e139c746f8cde2a8a3034bba3c5a"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();var _chai=(cov_q8tzz1mqs.s[0]++,_interopRequireDefault(require("chai")));var _chaiHttp=(cov_q8tzz1mqs.s[1]++,_interopRequireDefault(require("chai-http")));var _fs=(cov_q8tzz1mqs.s[2]++,_interopRequireDefault(require("fs")));var _util=(cov_q8tzz1mqs.s[3]++,_interopRequireDefault(require("util")));var _app=(cov_q8tzz1mqs.s[4]++,_interopRequireDefault(require("../src/app")));var _assume=(cov_q8tzz1mqs.s[5]++,_interopRequireDefault(require("./assumed/assume")));function _interopRequireDefault(obj){cov_q8tzz1mqs.f[0]++;cov_q8tzz1mqs.s[6]++;return(cov_q8tzz1mqs.b[1][0]++,obj)&&(cov_q8tzz1mqs.b[1][1]++,obj.__esModule)?(cov_q8tzz1mqs.b[0][0]++,obj):(cov_q8tzz1mqs.b[0][1]++,{"default":obj});}// eslint-disable-next-line no-unused-vars
cov_q8tzz1mqs.s[7]++;_chai["default"].use(_chaiHttp["default"]);cov_q8tzz1mqs.s[8]++;_chai["default"].should();var expect=(cov_q8tzz1mqs.s[9]++,_chai["default"].expect);var api=(cov_q8tzz1mqs.s[10]++,_chai["default"].request('http://localhost:5000'));cov_q8tzz1mqs.s[11]++;describe('User Viewer Activities',function(){cov_q8tzz1mqs.f[1]++;cov_q8tzz1mqs.s[12]++;it('should respond to viewer trying to view a specific AD without valid AD reference',function(done){cov_q8tzz1mqs.f[2]++;cov_q8tzz1mqs.s[13]++;api.get('/api/v1/car/:carId/').end(function(err,res){cov_q8tzz1mqs.f[3]++;cov_q8tzz1mqs.s[14]++;res.body.should.be.a('object');cov_q8tzz1mqs.s[15]++;res.body.should.have.property('status').equal(401);cov_q8tzz1mqs.s[16]++;res.body.should.have.property('success').equal('false');cov_q8tzz1mqs.s[17]++;res.body.should.have.property('error').equal('Please provide a valid Ad reference!');cov_q8tzz1mqs.s[18]++;done();});});cov_q8tzz1mqs.s[19]++;it('Should respond to viewer on an AD that doesnt exist ',function(done){cov_q8tzz1mqs.f[4]++;cov_q8tzz1mqs.s[20]++;api.get('/api/v1/car/12/').end(function(err,res){cov_q8tzz1mqs.f[5]++;cov_q8tzz1mqs.s[21]++;res.body.should.be.a('object');cov_q8tzz1mqs.s[22]++;res.body.should.have.property('status').equal(404);cov_q8tzz1mqs.s[23]++;res.body.should.have.property('success').equal('false');cov_q8tzz1mqs.s[24]++;res.body.should.have.property('error').equal('Ad not found!');cov_q8tzz1mqs.s[25]++;done();});});cov_q8tzz1mqs.s[26]++;it('Should let viewer view a specific AD successfully',function(done){cov_q8tzz1mqs.f[6]++;cov_q8tzz1mqs.s[27]++;api.get('/api/v1/car/1/').end(function(err,res){cov_q8tzz1mqs.f[7]++;cov_q8tzz1mqs.s[28]++;console.log(res.body.data);cov_q8tzz1mqs.s[29]++;res.body.should.be.a('object');cov_q8tzz1mqs.s[30]++;res.body.should.have.property('status').equal(200);cov_q8tzz1mqs.s[31]++;res.body.should.have.property('success').equal('true');cov_q8tzz1mqs.s[32]++;expect(res).to.have.nested.property('body.data').that.includes.all.keys(['id','owner','created_on','state','status','price','manufacturer','model','bodyType','year','mileage','transmission','vehicleInspectionNumber','licence','description','imageGallery','orders','flags']);cov_q8tzz1mqs.s[33]++;res.body.data.id.should.be.a('number');cov_q8tzz1mqs.s[34]++;res.body.data.owner.should.be.a('number');cov_q8tzz1mqs.s[35]++;res.body.data.created_on.should.be.a('string');cov_q8tzz1mqs.s[36]++;res.body.data.state.should.be.a('string');cov_q8tzz1mqs.s[37]++;res.body.data.status.should.be.a('string');cov_q8tzz1mqs.s[38]++;res.body.data.price.should.be.a('number');cov_q8tzz1mqs.s[39]++;res.body.data.manufacturer.should.be.a('string');cov_q8tzz1mqs.s[40]++;res.body.data.model.should.be.a('string');cov_q8tzz1mqs.s[41]++;res.body.data.bodyType.should.be.a('string');cov_q8tzz1mqs.s[42]++;res.body.data.year.should.be.a('number');cov_q8tzz1mqs.s[43]++;res.body.data.mileage.should.be.a('number');cov_q8tzz1mqs.s[44]++;res.body.data.transmission.should.be.a('string');cov_q8tzz1mqs.s[45]++;res.body.data.vehicleInspectionNumber.should.be.a('string');cov_q8tzz1mqs.s[46]++;res.body.data.licence.should.be.a('string');cov_q8tzz1mqs.s[47]++;res.body.data.imageGallery.should.be.a('array');cov_q8tzz1mqs.s[48]++;res.body.data.orders.should.be.a('array');cov_q8tzz1mqs.s[49]++;res.body.data.flags.should.be.a('array');cov_q8tzz1mqs.s[50]++;done();});});/*
      it('Should let viewer view all available AD successfully', (done) => {
        api
          .get(`/api/v1/car?status=available`)
          .end((err, res) => {
            res.body.should.be.a('object');
            res.body.should.have.property('status').equal(200);
            res.body.should.have.property('success').equal('true');
            res.body.should.have.property('data');
            res.body.data.should.be.a('array');
            const firstItem = res.body.data[0];
            firstItem.should.have.property('status').equal('available');
            expect(firstItem)
              .to.have.nested.property('body.data[0]')
              .that.includes.all.keys(['id', 'owner', 'created_on',
              'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);
              firstItem.id.should.be.a('integer');
              firstItem.owner.should.be.a('integer');
              firstItem.created_on.should.be.a('string');
              firstItem.state.should.be.a('string');
              firstItem.should.have.property('status').equal('available');
              firstItem.price.should.be.a('float');
              firstItem.manufacturer.should.be.a('float');
              firstItem.model.should.be.a('string');
              firstItem.body_type.should.be.a('float');
              done();
            });
      });
  
  
    it('Should let Viewer View all unsold cars within a price range', (done) => {
        const minPrice = 200.00;
        const maxPrice = 1000.00;
  
        const leastValue = (base) => {
          if (minPrice <= base) {
            return true;
          }
          return false;
        };
  
        const mostValue = (base) => {
          if (maxPrice >= base) {
            return true;
          }
          return false;
        };
        api
        .get(`/api/v1/car?status=available&minPrice=​${minPrice}​&maxPrice=​${maxPrice}`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.should.have.property('success').equal('true');
          res.body.should.have.property('data');
          res.body.data.should.be.a('array');
          res.body.data[0].should.be.a('object');
          expect(leastValue(res.body.data[0].price)).to.equal(true);
          expect(mostValue(res.body.data[0].price)).to.equal(true);
          done();
        });
    });
  
    it('Should let viewer to view all unsold and New ADs', (done) => {
      api
        .get('/api/v1/car?status=available&state=new')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.should.have.property('success').equal('true');
          res.body.should.have.property('data');
          res.body.data.should.be.a('array');
          const firstItem = res.body.data[0];
          firstItem.should.have.property('status').equal('available');
          firstItem.should.have.property('state').equal('new');
          expect(firstItem)
            .to.have.nested.property('body.data[0]')
            .that.includes.all.keys(['id', 'owner', 'created_on',
            'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);
            firstItem.id.should.be.a('integer');
            firstItem.owner.should.be.a('integer');
            firstItem.created_on.should.be.a('string');
            firstItem.state.should.be.a('string');
            firstItem.should.have.property('status').equal('available');
            firstItem.price.should.be.a('float');
            firstItem.manufacturer.should.be.a('float');
            firstItem.model.should.be.a('string');
            firstItem.body_type.should.be.a('float');
            done();
          });
    });
  
    it('Should let viewer to view all unsold and Used ADs', (done) => {
      api
        .get('/api/v1/car?status=available&state=used')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.should.have.property('success').equal('true');
          res.body.should.have.property('data');
          res.body.data.should.be.a('array');
          const firstItem = res.body.data[0];
          firstItem.should.have.property('status').equal('available');
          firstItem.should.have.property('state').equal('used');
          expect(firstItem)
            .to.have.nested.property('body.data[0]')
            .that.includes.all.keys(['id', 'owner', 'created_on',
            'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);
            firstItem.id.should.be.a('integer');
            firstItem.owner.should.be.a('integer');
            firstItem.created_on.should.be.a('string');
            firstItem.state.should.be.a('string');
            firstItem.should.have.property('status').equal('available');
            firstItem.price.should.be.a('float');
            firstItem.manufacturer.should.be.a('float');
            firstItem.model.should.be.a('string');
            firstItem.body_type.should.be.a('float');
            done();
          });
    });
  
    it('Should let viewer to view all unsold of Specific Make(Toyota) ADs', (done) => {
      api
        .get('/api/v1/car?status=available&manufacturer=toyota')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.should.have.property('success').equal('true');
          res.body.should.have.property('data');
          res.body.data.should.be.a('array');
          const firstItem = res.body.data[0];
          firstItem.should.have.property('status').equal('available');
          firstItem.should.have.property('make').equal('toyota');
          expect(firstItem)
            .to.have.nested.property('body.data[0]')
            .that.includes.all.keys(['id', 'owner', 'created_on',
            'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);
            firstItem.id.should.be.a('integer');
            firstItem.owner.should.be.a('integer');
            firstItem.created_on.should.be.a('string');
            firstItem.state.should.be.a('string');
            firstItem.should.have.property('status').equal('available');
            firstItem.price.should.be.a('float');
            firstItem.manufacturer.should.be.a('float');
            firstItem.model.should.be.a('string');
            firstItem.body_type.should.be.a('float');
            done();
          });
    });
  
    it('Should let viewer to view all unsold of Specific Body Type ADs', (done) => {
      api
        .get('/api/v1/car?status=available&bodyType=salon')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.should.have.property('success').equal('true');
          res.body.should.have.property('data');
          res.body.data.should.be.a('array');
          const firstItem = res.body.data[0];
          firstItem.should.have.property('status').equal('available');
          firstItem.should.have.property('bodyType').equal('salon');
          expect(firstItem)
            .to.have.nested.property('body.data[0]')
            .that.includes.all.keys(['id', 'owner', 'created_on',
            'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);
            firstItem.id.should.be.a('integer');
            firstItem.owner.should.be.a('integer');
            firstItem.created_on.should.be.a('string');
            firstItem.state.should.be.a('string');
            firstItem.should.have.property('status').equal('available');
            firstItem.price.should.be.a('float');
            firstItem.manufacturer.should.be.a('float');
            firstItem.model.should.be.a('string');
            firstItem.body_type.should.be.a('float');
            done();
          });
    });
  
    it('Should let viewer to view all unsold of Specific BodyType, Manufacturer, model ADs', (done) => {
      api
        .get('/api/v1/car?status=available&bodyType=salon&manufacturer=toyota&model=venza')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(200);
          res.body.should.have.property('success').equal('true');
          res.body.should.have.property('data');
          res.body.data.should.be.a('array');
          const firstItem = res.body.data[0];
          firstItem.should.have.property('status').equal('available');
          firstItem.should.have.property('bodyType').equal('salon');
          firstItem.should.have.property('manufacturer').equal('toyota');
          firstItem.should.have.property('model').equal('venza');
          expect(firstItem)
            .to.have.nested.property('body.data[0]')
            .that.includes.all.keys(['id', 'owner', 'created_on',
            'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);
            firstItem.id.should.be.a('integer');
            firstItem.owner.should.be.a('integer');
            firstItem.created_on.should.be.a('string');
            firstItem.state.should.be.a('string');
            firstItem.should.have.property('status').equal('available');
            firstItem.price.should.be.a('float');
            firstItem.manufacturer.should.be.a('float');
            firstItem.model.should.be.a('string');
            firstItem.body_type.should.be.a('float');
            done();
          });
    });
    */});//# sourceMappingURL=data:application/json;charset=utf-8;base64,