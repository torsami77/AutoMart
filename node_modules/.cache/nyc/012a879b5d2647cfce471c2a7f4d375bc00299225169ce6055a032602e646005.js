"use strict";var cov_2jhi50u0dv=function(){var path="/home/sami/Documents/AutoMart/test/user_seller_test.js";var hash="21a8bab661f1a6c0e9b9051161b8021c74b5b020";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sami/Documents/AutoMart/test/user_seller_test.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:28}},"2":{start:{line:8,column:12},end:{line:8,column:51}},"3":{start:{line:10,column:16},end:{line:10,column:60}},"4":{start:{line:12,column:10},end:{line:12,column:47}},"5":{start:{line:14,column:12},end:{line:14,column:51}},"6":{start:{line:16,column:11},end:{line:16,column:56}},"7":{start:{line:18,column:14},end:{line:18,column:65}},"8":{start:{line:20,column:39},end:{line:20,column:95}},"9":{start:{line:23,column:0},end:{line:23,column:43}},"10":{start:{line:25,column:0},end:{line:25,column:26}},"11":{start:{line:27,column:13},end:{line:27,column:36}},"12":{start:{line:29,column:10},end:{line:29,column:59}},"13":{start:{line:31,column:11},end:{line:31,column:82}},"14":{start:{line:33,column:12},end:{line:33,column:27}},"15":{start:{line:36,column:0},end:{line:456,column:3}},"16":{start:{line:37,column:2},end:{line:45,column:5}},"17":{start:{line:38,column:4},end:{line:44,column:7}},"18":{start:{line:39,column:6},end:{line:39,column:37}},"19":{start:{line:40,column:6},end:{line:40,column:57}},"20":{start:{line:41,column:6},end:{line:41,column:73}},"21":{start:{line:42,column:6},end:{line:42,column:62}},"22":{start:{line:43,column:6},end:{line:43,column:13}},"23":{start:{line:46,column:2},end:{line:54,column:5}},"24":{start:{line:47,column:4},end:{line:53,column:7}},"25":{start:{line:48,column:6},end:{line:48,column:37}},"26":{start:{line:49,column:6},end:{line:49,column:57}},"27":{start:{line:50,column:6},end:{line:50,column:73}},"28":{start:{line:51,column:6},end:{line:51,column:62}},"29":{start:{line:52,column:6},end:{line:52,column:13}},"30":{start:{line:55,column:2},end:{line:63,column:5}},"31":{start:{line:56,column:4},end:{line:62,column:7}},"32":{start:{line:57,column:6},end:{line:57,column:37}},"33":{start:{line:58,column:6},end:{line:58,column:57}},"34":{start:{line:59,column:6},end:{line:59,column:90}},"35":{start:{line:60,column:6},end:{line:60,column:62}},"36":{start:{line:61,column:6},end:{line:61,column:13}},"37":{start:{line:64,column:2},end:{line:72,column:5}},"38":{start:{line:65,column:4},end:{line:71,column:7}},"39":{start:{line:66,column:6},end:{line:66,column:37}},"40":{start:{line:67,column:6},end:{line:67,column:57}},"41":{start:{line:68,column:6},end:{line:68,column:83}},"42":{start:{line:69,column:6},end:{line:69,column:62}},"43":{start:{line:70,column:6},end:{line:70,column:13}},"44":{start:{line:73,column:2},end:{line:81,column:5}},"45":{start:{line:74,column:4},end:{line:80,column:7}},"46":{start:{line:75,column:6},end:{line:75,column:37}},"47":{start:{line:76,column:6},end:{line:76,column:57}},"48":{start:{line:77,column:6},end:{line:77,column:86}},"49":{start:{line:78,column:6},end:{line:78,column:62}},"50":{start:{line:79,column:6},end:{line:79,column:13}},"51":{start:{line:82,column:2},end:{line:90,column:5}},"52":{start:{line:83,column:4},end:{line:89,column:7}},"53":{start:{line:84,column:6},end:{line:84,column:37}},"54":{start:{line:85,column:6},end:{line:85,column:57}},"55":{start:{line:86,column:6},end:{line:86,column:86}},"56":{start:{line:87,column:6},end:{line:87,column:62}},"57":{start:{line:88,column:6},end:{line:88,column:13}},"58":{start:{line:457,column:15},end:{line:457,column:20}},"59":{start:{line:458,column:0},end:{line:458,column:30}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:20,column:9},end:{line:20,column:31}},loc:{start:{line:20,column:37},end:{line:20,column:97}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:36,column:35},end:{line:36,column:36}},loc:{start:{line:36,column:47},end:{line:456,column:1}},line:36},"2":{name:"(anonymous_2)",decl:{start:{line:37,column:74},end:{line:37,column:75}},loc:{start:{line:37,column:90},end:{line:45,column:3}},line:37},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:68},end:{line:38,column:69}},loc:{start:{line:38,column:88},end:{line:44,column:5}},line:38},"4":{name:"(anonymous_4)",decl:{start:{line:46,column:82},end:{line:46,column:83}},loc:{start:{line:46,column:98},end:{line:54,column:3}},line:46},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:815},end:{line:47,column:816}},loc:{start:{line:47,column:835},end:{line:53,column:5}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:55,column:97},end:{line:55,column:98}},loc:{start:{line:55,column:113},end:{line:63,column:3}},line:55},"7":{name:"(anonymous_7)",decl:{start:{line:56,column:741},end:{line:56,column:742}},loc:{start:{line:56,column:761},end:{line:62,column:5}},line:56},"8":{name:"(anonymous_8)",decl:{start:{line:64,column:81},end:{line:64,column:82}},loc:{start:{line:64,column:97},end:{line:72,column:3}},line:64},"9":{name:"(anonymous_9)",decl:{start:{line:65,column:755},end:{line:65,column:756}},loc:{start:{line:65,column:775},end:{line:71,column:5}},line:65},"10":{name:"(anonymous_10)",decl:{start:{line:73,column:85},end:{line:73,column:86}},loc:{start:{line:73,column:101},end:{line:81,column:3}},line:73},"11":{name:"(anonymous_11)",decl:{start:{line:74,column:749},end:{line:74,column:750}},loc:{start:{line:74,column:769},end:{line:80,column:5}},line:74},"12":{name:"(anonymous_12)",decl:{start:{line:82,column:80},end:{line:82,column:81}},loc:{start:{line:82,column:96},end:{line:90,column:3}},line:82},"13":{name:"(anonymous_13)",decl:{start:{line:83,column:757},end:{line:83,column:758}},loc:{start:{line:83,column:777},end:{line:89,column:5}},line:83}},branchMap:{"0":{loc:{start:{line:20,column:46},end:{line:20,column:94}},type:"cond-expr",locations:[{start:{line:20,column:70},end:{line:20,column:73}},{start:{line:20,column:76},end:{line:20,column:94}}],line:20},"1":{loc:{start:{line:20,column:46},end:{line:20,column:67}},type:"binary-expr",locations:[{start:{line:20,column:46},end:{line:20,column:49}},{start:{line:20,column:53},end:{line:20,column:67}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"21a8bab661f1a6c0e9b9051161b8021c74b5b020"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_2jhi50u0dv.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2jhi50u0dv.s[1]++;exports["default"]=void 0;var _chai=(cov_2jhi50u0dv.s[2]++,_interopRequireDefault(require("chai")));var _chaiHttp=(cov_2jhi50u0dv.s[3]++,_interopRequireDefault(require("chai-http")));var _fs=(cov_2jhi50u0dv.s[4]++,_interopRequireDefault(require("fs")));var _util=(cov_2jhi50u0dv.s[5]++,_interopRequireDefault(require("util")));var _app=(cov_2jhi50u0dv.s[6]++,_interopRequireDefault(require("../src/app")));var _assume=(cov_2jhi50u0dv.s[7]++,_interopRequireDefault(require("./assumed/assume")));function _interopRequireDefault(obj){cov_2jhi50u0dv.f[0]++;cov_2jhi50u0dv.s[8]++;return(cov_2jhi50u0dv.b[1][0]++,obj)&&(cov_2jhi50u0dv.b[1][1]++,obj.__esModule)?(cov_2jhi50u0dv.b[0][0]++,obj):(cov_2jhi50u0dv.b[0][1]++,{"default":obj});}// eslint-disable-next-line no-unused-vars
cov_2jhi50u0dv.s[9]++;_chai["default"].use(_chaiHttp["default"]);cov_2jhi50u0dv.s[10]++;_chai["default"].should();var expect=(cov_2jhi50u0dv.s[11]++,_chai["default"].expect);var api=(cov_2jhi50u0dv.s[12]++,_chai["default"].request('http://localhost:5000'));var data=(cov_2jhi50u0dv.s[13]++,_fs["default"].readFileSync("".concat(__dirname,"/assumed/token.txt")));var token=(cov_2jhi50u0dv.s[14]++,data.toString());// eslint-disable-next-line import/no-mutable-exports
var carId;cov_2jhi50u0dv.s[15]++;describe('User Seller Activities',function(){cov_2jhi50u0dv.f[1]++;cov_2jhi50u0dv.s[16]++;it('should NOT let unauthenticated user (seller) create a new Advert ',function(done){cov_2jhi50u0dv.f[2]++;cov_2jhi50u0dv.s[17]++;api.post('/api/v1/car/').send(_assume["default"].newAdvert).end(function(err,res){cov_2jhi50u0dv.f[3]++;cov_2jhi50u0dv.s[18]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[19]++;res.body.should.have.property('status').equal(403);cov_2jhi50u0dv.s[20]++;res.body.should.have.property('error').equal('Unauthorised User!');cov_2jhi50u0dv.s[21]++;res.body.should.have.property('success').equal('false');cov_2jhi50u0dv.s[22]++;done();});});cov_2jhi50u0dv.s[23]++;it('Should NOT let invalid Token user to post new Advert/affect posted Advert',function(done){cov_2jhi50u0dv.f[4]++;cov_2jhi50u0dv.s[24]++;api.post('/api/v1/car').set('authorization','invalidtoken').set('Accept','application.json').field('manufacturer',_assume["default"].newAdvert.manufacturer).field('model',_assume["default"].newAdvert.model).field('bodyType',_assume["default"].newAdvert.bodyType).field('year',_assume["default"].newAdvert.year).field('mileage',_assume["default"].newAdvert.mileage).field('state',_assume["default"].newAdvert.state).field('transmission',_assume["default"].newAdvert.transmission).field('vehicleInspectionNumber',_assume["default"].newAdvert.vehicleInspectionNumber).field('licence',_assume["default"].newAdvert.licence).field('description',_assume["default"].newAdvert.description).field('price',_assume["default"].newAdvert.price).attach('carImage',"".concat(__dirname,"/assumed/blank.pdf")).end(function(err,res){cov_2jhi50u0dv.f[5]++;cov_2jhi50u0dv.s[25]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[26]++;res.body.should.have.property('status').equal(403);cov_2jhi50u0dv.s[27]++;res.body.should.have.property('error').equal('Unauthorised User!');cov_2jhi50u0dv.s[28]++;res.body.should.have.property('success').equal('false');cov_2jhi50u0dv.s[29]++;done();});});cov_2jhi50u0dv.s[30]++;it('Should NOT let Authenticated User (Seller) to post new Advert without MANUFACTURER input',function(done){cov_2jhi50u0dv.f[6]++;cov_2jhi50u0dv.s[31]++;api.post('/api/v1/car').set('authorization',token).set('Accept','application.json').field('model',_assume["default"].newAdvert.model).field('bodyType',_assume["default"].newAdvert.bodyType).field('year',_assume["default"].newAdvert.year).field('mileage',_assume["default"].newAdvert.mileage).field('state',_assume["default"].newAdvert.state).field('transmission',_assume["default"].newAdvert.transmission).field('vehicleInspectionNumber',_assume["default"].newAdvert.vehicleInspectionNumber).field('licence',_assume["default"].newAdvert.licence).field('description',_assume["default"].newAdvert.description).field('price',_assume["default"].newAdvert.price).attach('carImage',"".concat(__dirname,"/assumed/blank.pdf")).end(function(err,res){cov_2jhi50u0dv.f[7]++;cov_2jhi50u0dv.s[32]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[33]++;res.body.should.have.property('status').equal(422);cov_2jhi50u0dv.s[34]++;res.body.should.have.property('error').equal('manufacturer field cannot be empty!');cov_2jhi50u0dv.s[35]++;res.body.should.have.property('success').equal('false');cov_2jhi50u0dv.s[36]++;done();});});cov_2jhi50u0dv.s[37]++;it('Should NOT let Auth User (Seller) to post new Advert without MODEL input',function(done){cov_2jhi50u0dv.f[8]++;cov_2jhi50u0dv.s[38]++;api.post('/api/v1/car').set('authorization',token).set('Accept','application.json').field('manufacturer',_assume["default"].newAdvert.manufacturer).field('bodyType',_assume["default"].newAdvert.bodyType).field('year',_assume["default"].newAdvert.year).field('mileage',_assume["default"].newAdvert.mileage).field('state',_assume["default"].newAdvert.state).field('transmission',_assume["default"].newAdvert.transmission).field('vehicleInspectionNumber',_assume["default"].newAdvert.vehicleInspectionNumber).field('licence',_assume["default"].newAdvert.licence).field('description',_assume["default"].newAdvert.description).field('price',_assume["default"].newAdvert.price).attach('carImage',"".concat(__dirname,"/assumed/blank.pdf")).end(function(err,res){cov_2jhi50u0dv.f[9]++;cov_2jhi50u0dv.s[39]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[40]++;res.body.should.have.property('status').equal(422);cov_2jhi50u0dv.s[41]++;res.body.should.have.property('error').equal('model field cannot be empty!');cov_2jhi50u0dv.s[42]++;res.body.should.have.property('success').equal('false');cov_2jhi50u0dv.s[43]++;done();});});cov_2jhi50u0dv.s[44]++;it('Should NOT let Auth User (Seller) to post new Advert without BODY TYPE input',function(done){cov_2jhi50u0dv.f[10]++;cov_2jhi50u0dv.s[45]++;api.post('/api/v1/car').set('authorization',token).set('Accept','application.json').field('manufacturer',_assume["default"].newAdvert.manufacturer).field('model',_assume["default"].newAdvert.model).field('year',_assume["default"].newAdvert.year).field('mileage',_assume["default"].newAdvert.mileage).field('state',_assume["default"].newAdvert.state).field('transmission',_assume["default"].newAdvert.transmission).field('vehicleInspectionNumber',_assume["default"].newAdvert.vehicleInspectionNumber).field('licence',_assume["default"].newAdvert.licence).field('description',_assume["default"].newAdvert.description).field('price',_assume["default"].newAdvert.price).attach('carImage',"".concat(__dirname,"/assumed/blank.pdf")).end(function(err,res){cov_2jhi50u0dv.f[11]++;cov_2jhi50u0dv.s[46]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[47]++;res.body.should.have.property('status').equal(422);cov_2jhi50u0dv.s[48]++;res.body.should.have.property('error').equal('bodyType field cannot be empty!');cov_2jhi50u0dv.s[49]++;res.body.should.have.property('success').equal('false');cov_2jhi50u0dv.s[50]++;done();});});cov_2jhi50u0dv.s[51]++;it('Should NOT let Auth User (Seller) to post new Advert without YEAR input',function(done){cov_2jhi50u0dv.f[12]++;cov_2jhi50u0dv.s[52]++;api.post('/api/v1/car').set('authorization',token).set('Accept','application.json').field('manufacturer',_assume["default"].newAdvert.manufacturer).field('model',_assume["default"].newAdvert.model).field('bodyType',_assume["default"].newAdvert.bodyType).field('mileage',_assume["default"].newAdvert.mileage).field('state',_assume["default"].newAdvert.state).field('transmission',_assume["default"].newAdvert.transmission).field('vehicleInspectionNumber',_assume["default"].newAdvert.vehicleInspectionNumber).field('licence',_assume["default"].newAdvert.licence).field('description',_assume["default"].newAdvert.description).field('price',_assume["default"].newAdvert.price).attach('carImage',"".concat(__dirname,"/assumed/blank.pdf")).end(function(err,res){cov_2jhi50u0dv.f[13]++;cov_2jhi50u0dv.s[53]++;res.body.should.be.a('object');cov_2jhi50u0dv.s[54]++;res.body.should.have.property('status').equal(422);cov_2jhi50u0dv.s[55]++;res.body.should.have.property('error').equal('bodyType field cannot be empty!');cov_2jhi50u0dv.s[56]++;res.body.should.have.property('success').equal('false');cov_2jhi50u0dv.s[57]++;done();});});/*
    it('Should NOT let Auth User (Seller) to post new Advert without YEAR input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('state', assumedData.newAdvert.state)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('licence', assumedData.newAdvert.licence)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('year field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
    it('Should NOT let Auth User (Seller) to post new Advert without STATE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('licence', assumedData.newAdvert.licence)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('state field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
    it('Should NOT let Auth User (Seller) to post new Advert without TRANSMISSION input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('state', assumedData.newAdvert.state)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('licence', assumedData.newAdvert.licence)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('transmission field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
    it('Should NOT let Auth User (Seller) to post new Advert without Veh-Ins-Num input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('state', assumedData.newAdvert.state)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('licence', assumedData.newAdvert.licence)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('vehicleInspectionNumber field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
    it('Should NOT let Auth User (Seller) to post new Advert without LICENCE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('state', assumedData.newAdvert.state)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('licence field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
    it('Should NOT let Auth User (Seller) to post new Advert without MILEAGE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('state', assumedData.newAdvert.state)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('licence', assumedData.newAdvert.licence)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('mileage field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
    it('Should NOT let Auth User (Seller) to post new Advert without DESCRIPTION input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('state', assumedData.newAdvert.state)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('licence', assumedData.newAdvert.licence)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('description field cannot be empty!');
          res.body.should.have.property('success').equal('false');
          done();
        });
    });
  
  /*
    it('should NOT let Auth User (Seller) to post new Advert without PRICE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.noPriceAdvert)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('price field cannot be empty!');
          done();
        });
    });
  
    it('should NOT let Auth User (Seller) to post new Advert without CAR IMAGE input', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .set('Accept', 'application.json')
        .field('manufacturer', assumedData.newAdvert.manufacturer)
        .field('model', assumedData.newAdvert.model)
        .field('bodyType', assumedData.newAdvert.bodyType)
        .field('year', assumedData.newAdvert.year)
        .field('mileage', assumedData.newAdvert.mileage)
        .field('state', assumedData.newAdvert.state)
        .field('transmission', assumedData.newAdvert.transmission)
        .field('vehicleInspectionNumber', assumedData.newAdvert.vehicleInspectionNumber)
        .field('licence', assumedData.newAdvert.licence)
        .field('description', assumedData.newAdvert.description)
        .field('price', assumedData.newAdvert.price)
        .attach('carImage', `${__dirname}/assumed/blank.pdf`)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('Upload at least one image!');
          done();
        });
    });
  /*
    it('should NOT let Auth User (Seller) to post new Advert without a valid image file', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.newAdvert)
        .attach('carImage', './assumed/blank.pdf')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(422);
          res.body.should.have.property('error').equal('Please provide a valid image file!');
          done();
        });
    });
  
    it('should let Auth user (seller) to create new Advert', (done) => {
      api
        .post('/api/v1/car')
        .set('authorization', token)
        .send(assumedData.newAdvert)
        .attach('carImage', './assumed/blank.pdf')
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(201);
          res.body.data.should.be.a('object');
          expect(res)
            .to.have.nested.property('body.data')
            .that.includes.all.keys(['id', 'email', 'created_on', 'manufacturer', 'model',
              'price', 'state', 'status', 'imageGallery']);
          res.body.data.id.should.be.a('number');
          res.body.data.email.should.be.a('string');
          res.body.data.created_on.should.be.a('string');
          res.body.data.manufacturer.should.be.a('string');
          res.body.data.model.should.be.a('string');
          res.body.data.price.should.be.a('number');
          res.body.data.state.should.be.a('string');
          res.body.data.status.should.be.a('string');
          res.body.data.imageGallery.should.be.a('array');
          res.body.data.should.have.property('message').equal('Your Ad has been added successfully!');
          carId = res.body.data.id;
          done();
        });
    });
  
  /*
    it('should NOT let Auth User (Seller) change price of sold or not owned AD', (done) => {
      api
        .patch(`/api/v1/car/${1}/price`)
        .set('authorization', token)
        .send(assumedData.newPrice)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(403);
          res.body.should.have.property('error').equal('You cannot change the price of this Ad!');
          done();
        });
    });
  
    it('should NOT let Auth User (Seller) change Ad price to invalid value ', (done) => {
      api
        .patch(`/api/v1/car/${carId}/price`)
        .set('authorization', token)
        .send(assumedData.invalidPrice)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.should.have.property('error').equal('Invalid Price value!');
          done();
        });
    });
  
    it('should NOT let Auth User (Seller) change Ad price with invalid reference', (done) => {
      api
        .patch('/api/v1/car/:carId/price')
        .set('authorization', token)
        .send(assumedData.newPrice)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.should.have.property('error').equal('Invalid Param Request!');
          done();
        });
    });
  
    it('Should let Auth User (seller) to update the price of his/her posted AD.', (done) => {
      api
        .patch(`/api/v1/car/${carId}/price`)
        .set('authorization', token)
        .send(assumedData.newPrice)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(201);
          res.body.data.should.have.property('message').equal('New price Updated!');
          res.body.data.should.have.property('price').equal(assumedData.newPrice.price);
          done();
        });
    });
  
     it('should NOT let Auth User (Seller) change Status to sold with invalid reference', (done) => {
      api
        .patch('/api/v1/car/:carId/status')
        .set('authorization', token)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(401);
          res.body.should.have.property('error').equal('Invalid Param Request!');
          done();
        });
    });
  
    it('should NOT let Auth User (Seller) change AD(not owned) status to sold', (done) => {
      api
        .patch(`/api/v1/car/${1}/price`)
        .set('authorization', token)
        .end((err, res) => {
          res.body.should.be.a('object');
          res.body.should.have.property('status').equal(403);
          res.body.should.have.property('error').equal('You are not allowed to mark this Ad as sold!');
          done();
        });
    });
  
  
    it('Should let Auth User (seller) to mark his/her posted Advert as sold', (done) => {
      api
        .patch(`/api/v1/car/${carId}/status`)
        .set('authorization', token)
        .end((err, res) => {
          res.body.should.be.a('object');
          expect(res)
            .to.have.nested.property('body.data')
            .that.includes.all.keys(['id', 'email', 'created_on', 'manufacturer', 'model',
              'price', 'state', 'status', 'message', 'success', 'field']);
          res.body.data.id.should.be.a('number');
          res.body.data.email.should.be.a('string');
          res.body.data.created_on.should.be.a('string');
          res.body.data.manufacturer.should.be.a('string');
          res.body.data.model.should.be.a('string');
          res.body.data.price.should.be.a('number');
          res.body.data.state.should.be.a('string');
          res.body.data.status.should.be.a('string');
          res.body.data.message.should.be.a('string');
          res.body.data.success.should.be.a('string');
          res.body.should.have.property('status').equal(201);
          res.body.data.should.have.property('message').equal('Car marked as sold!');
          done();
        });
    });
  
  
        */});var _default=(cov_2jhi50u0dv.s[58]++,carId);cov_2jhi50u0dv.s[59]++;exports["default"]=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,