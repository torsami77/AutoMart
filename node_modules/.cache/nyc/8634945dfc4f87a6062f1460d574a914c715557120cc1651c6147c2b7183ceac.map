{"version":3,"sources":["user_viewer_test.js"],"names":["chai","use","chaiHttp","should","expect","api","request","describe","it","done","get","end","err","res","body","be","a","have","property","equal","to","nested","that","includes","all","keys","data","id","owner","created_on","state","status","price","manufacturer","model","bodyType","year","mileage","transmission","vehicleInspectionNumber","licence","imageGallery","orders","flags","firstItem","minPrice","maxPrice","leastValue","base","mostValue"],"mappings":"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","sourceRoot":"/home/sami/Documents/AutoMart/test","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport fs from 'fs';\nimport util from 'util';\n// eslint-disable-next-line no-unused-vars\nimport app from '../src/app';\nimport assumedData from './assumed/assume';\n\nchai.use(chaiHttp);\n\nchai.should();\nconst { expect } = chai;\n\nconst api = chai.request('http://localhost:5000');\n\n\ndescribe('User Viewer Activities', () => {\n  it('should respond to viewer trying to view a specific AD without valid AD reference', (done) => {\n    api\n      .get('/api/v1/car/:carId/')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.should.have.property('success').equal('false');\n        res.body.should.have.property('error').equal('Please provide a valid Ad reference!');\n        done();\n      });\n  });\n\n  it('Should respond to viewer on an AD that doesnt exist ', (done) => {\n    api\n      .get('/api/v1/car/12/')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(404);\n        res.body.should.have.property('success').equal('false');\n        res.body.should.have.property('error').equal('Ad not found!');\n        done();\n      });\n  });\n\n  it('Should let viewer view a specific AD successfully', (done) => {\n    api\n      .get('/api/v1/car/1/')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        expect(res)\n          .to.have.nested.property('body.data')\n          .that.includes.all.keys(['id', 'owner', 'created_on', 'state', 'status', 'price', 'manufacturer', 'model',\n            'bodyType', 'year', 'mileage', 'transmission', 'vehicleInspectionNumber', 'licence', 'description', \n            'imageGallery', 'orders', 'flags']);\n        res.body.data.id.should.be.a('number');\n        res.body.data.owner.should.be.a('number');\n        res.body.data.created_on.should.be.a('string');\n        res.body.data.state.should.be.a('string');\n        res.body.data.status.should.be.a('string');\n        res.body.data.price.should.be.a('number');\n        res.body.data.manufacturer.should.be.a('string');\n        res.body.data.model.should.be.a('string');\n        res.body.data.bodyType.should.be.a('string');\n        res.body.data.year.should.be.a('number');\n        res.body.data.mileage.should.be.a('number');\n        res.body.data.transmission.should.be.a('string');\n        res.body.data.vehicleInspectionNumber.should.be.a('string');\n        res.body.data.licence.should.be.a('string');\n        res.body.data.imageGallery.should.be.a('array');\n        res.body.data.orders.should.be.a('array');\n        res.body.data.flags.should.be.a('array');\n        done();\n      });\n  });\n\n\n  it('Should let viewer view all available AD successfully', (done) => {\n    api\n      .get('/api/v1/car?status=available')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on', 'state', 'status', 'price', 'manufacturer', 'model',\n            'bodyType', 'year', 'mileage', 'transmission', 'vehicleInspectionNumber', 'licence', 'description', \n            'imageGallery', 'orders', 'flags']);\n        const firstItem = res.body.data[0];\n        firstItem.id.should.be.a('number');\n        firstItem.owner.should.be.a('number');\n        firstItem.created_on.should.be.a('string');\n        firstItem.state.should.be.a('string');\n        firstItem.status.should.be.a('string');\n        firstItem.price.should.be.a('number');\n        firstItem.manufacturer.should.be.a('string');\n        firstItem.model.should.be.a('string');\n        firstItem.bodyType.should.be.a('string');\n        firstItem.year.should.be.a('number');\n        firstItem.mileage.should.be.a('number');\n        firstItem.transmission.should.be.a('string');\n        firstItem.vehicleInspectionNumber.should.be.a('string');\n        firstItem.licence.should.be.a('string');\n        firstItem.imageGallery.should.be.a('array');\n        firstItem.orders.should.be.a('array');\n        firstItem.flags.should.be.a('array');\n        done();\n      });\n  });\n\n  it('Should let Viewer View all unsold cars within a price range', (done) => {\n    const minPrice = 1000.00;\n    const maxPrice = 2000.00;\n\n    const leastValue = (base) => {\n      if (minPrice <= base) {\n        return true;\n      }\n      return false;\n    };\n\n    const mostValue = (base) => {\n      if (maxPrice >= base) {\n        return true;\n      }\n      return false;\n    };\n    api\n      .get(`/api/v1/car?status=available&minPrice=${minPrice}$maxPrice=${maxPrice}`)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        res.body.data[0].should.be.a('object');\n        expect(leastValue(res.body.data[0].price)).to.equal(true);\n        expect(mostValue(res.body.data[0].price)).to.equal(true);\n        done();\n      });\n  });\n\n  it('Should let viewer to view all unsold ADs of particular STATE(new)', (done) => {\n    api\n      .get('/api/v1/car?status=available&state=new')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n            'state', 'status', 'price', 'manufacturer', 'model', 'bodyType']);\n        const firstItem = res.body.data[0];\n        firstItem.id.should.be.a('number');\n        firstItem.owner.should.be.a('number');\n        firstItem.created_on.should.be.a('string');\n        firstItem.should.have.property('state').equal('new');\n        firstItem.should.have.property('status').equal('available');\n        firstItem.price.should.be.a('number');\n        firstItem.manufacturer.should.be.a('string');\n        firstItem.model.should.be.a('string');\n        firstItem.bodyType.should.be.a('string');\n        done();\n      });\n  });\n\n\n  it('Should let viewer to view all unsold ADs of particular STATE(used)', (done) => {\n    api\n      .get('/api/v1/car?status=available&state=used')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n            'state', 'status', 'price', 'manufacturer', 'model', 'bodyType']);\n        const firstItem = res.body.data[0];\n        firstItem.id.should.be.a('number');\n        firstItem.owner.should.be.a('number');\n        firstItem.created_on.should.be.a('string');\n        firstItem.should.have.property('state').equal('used');\n        firstItem.should.have.property('status').equal('available');\n        firstItem.price.should.be.a('number');\n        firstItem.manufacturer.should.be.a('string');\n        firstItem.model.should.be.a('string');\n        firstItem.bodyType.should.be.a('string');\n        done();\n      });\n  });\n\n\n  it('Should let viewer to view all unsold ADs of BODY TYPE(salon)', (done) => {\n    api\n      .get('/api/v1/car?status=available&bodyType=salon')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n            'state', 'status', 'price', 'manufacturer', 'model', 'bodyType']);\n        const firstItem = res.body.data[0];\n        firstItem.id.should.be.a('number');\n        firstItem.owner.should.be.a('number');\n        firstItem.created_on.should.be.a('string');\n        firstItem.state.should.be.a('string');\n        firstItem.should.have.property('status').equal('available');\n        firstItem.price.should.be.a('number');\n        firstItem.manufacturer.should.be.a('string');\n        firstItem.model.should.be.a('string');\n        firstItem.should.have.property('bodyType').equal('salon');\n        done();\n      });\n  });\n\n  it('Should let viewer to view all unsold ADs of MANUFACTURER(toyota)', (done) => {\n    api\n      .get('/api/v1/car?status=available&manufacturer=toyota')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n            'state', 'status', 'price', 'manufacturer', 'model', 'bodyType']);\n        const firstItem = res.body.data[0];\n        firstItem.id.should.be.a('number');\n        firstItem.owner.should.be.a('number');\n        firstItem.created_on.should.be.a('string');\n        firstItem.state.should.be.a('string');\n        firstItem.should.have.property('status').equal('available');\n        firstItem.price.should.be.a('number');\n        firstItem.should.have.property('manufacturer').equal('toyota');\n        firstItem.model.should.be.a('string');\n        firstItem.bodyType.should.be.a('string');\n        done();\n      });\n  });\n  /*\n  it('Should let viewer to view all unsold and Used ADs', (done) => {\n    api\n      .get('/api/v1/car?status=available&state=used')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        const firstItem = res.body.data[0];\n        firstItem.should.have.property('status').equal('available');\n        firstItem.should.have.property('state').equal('used');\n        expect(firstItem)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n          'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);\n          firstItem.id.should.be.a('integer');\n          firstItem.owner.should.be.a('integer');\n          firstItem.created_on.should.be.a('string');\n          firstItem.state.should.be.a('string');\n          firstItem.should.have.property('status').equal('available');\n          firstItem.price.should.be.a('float');\n          firstItem.manufacturer.should.be.a('float');\n          firstItem.model.should.be.a('string');\n          firstItem.body_type.should.be.a('float');\n          done();\n        });\n  });\n\n  it('Should let viewer to view all unsold of Specific Make(Toyota) ADs', (done) => {\n    api\n      .get('/api/v1/car?status=available&manufacturer=toyota')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        const firstItem = res.body.data[0];\n        firstItem.should.have.property('status').equal('available');\n        firstItem.should.have.property('make').equal('toyota');\n        expect(firstItem)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n          'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);\n          firstItem.id.should.be.a('integer');\n          firstItem.owner.should.be.a('integer');\n          firstItem.created_on.should.be.a('string');\n          firstItem.state.should.be.a('string');\n          firstItem.should.have.property('status').equal('available');\n          firstItem.price.should.be.a('float');\n          firstItem.manufacturer.should.be.a('float');\n          firstItem.model.should.be.a('string');\n          firstItem.body_type.should.be.a('float');\n          done();\n        });\n  });\n\n  it('Should let viewer to view all unsold of Specific Body Type ADs', (done) => {\n    api\n      .get('/api/v1/car?status=available&bodyType=salon')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        const firstItem = res.body.data[0];\n        firstItem.should.have.property('status').equal('available');\n        firstItem.should.have.property('bodyType').equal('salon');\n        expect(firstItem)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n          'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);\n          firstItem.id.should.be.a('integer');\n          firstItem.owner.should.be.a('integer');\n          firstItem.created_on.should.be.a('string');\n          firstItem.state.should.be.a('string');\n          firstItem.should.have.property('status').equal('available');\n          firstItem.price.should.be.a('float');\n          firstItem.manufacturer.should.be.a('float');\n          firstItem.model.should.be.a('string');\n          firstItem.body_type.should.be.a('float');\n          done();\n        });\n  });\n\n  it('Should let viewer to view all unsold of Specific BodyType, Manufacturer, model ADs', (done) => {\n    api\n      .get('/api/v1/car?status=available&bodyType=salon&manufacturer=toyota&model=venza')\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        const firstItem = res.body.data[0];\n        firstItem.should.have.property('status').equal('available');\n        firstItem.should.have.property('bodyType').equal('salon');\n        firstItem.should.have.property('manufacturer').equal('toyota');\n        firstItem.should.have.property('model').equal('venza');\n        expect(firstItem)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'owner', 'created_on',\n          'state', 'status', 'price', 'manufacturer', 'model', 'body_type']);\n          firstItem.id.should.be.a('integer');\n          firstItem.owner.should.be.a('integer');\n          firstItem.created_on.should.be.a('string');\n          firstItem.state.should.be.a('string');\n          firstItem.should.have.property('status').equal('available');\n          firstItem.price.should.be.a('float');\n          firstItem.manufacturer.should.be.a('float');\n          firstItem.model.should.be.a('string');\n          firstItem.body_type.should.be.a('float');\n          done();\n        });\n  });\n  */\n})"]}