{"version":3,"sources":["mynodeconfig.js"],"names":["app","dotenv","config","use","bodyParser","json","urlencoded","extended","text","type","verifyToken","req","res","next","console","log","headers","authorization","decoded","jwt","verify","process","env","SECRET_KEY","userData","error","cookie","status","send","success","storage","multer","diskStorage","filename","carImage","callback","Date","toISOString","originalname","upload","cloudinary","cloud_name","CLOUD_NAME","api_key","API_ID","api_secret","API_SECRET"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AACAC,mBAAOC,MAAP;;AAEAF,GAAG,CAACG,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAL,GAAG,CAACG,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAP,GAAG,CAACG,GAAJ,CAAQC,uBAAWI,IAAX,EAAR;AACAR,GAAG,CAACG,GAAJ,CAAQC,uBAAWC,IAAX,CAAgB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAAR;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,OAAhB;AACA,MAAMC,aAAa,GAAGN,GAAG,CAACK,OAA1B;;AACA,MAAI;AACF,QAAME,OAAO,GAAGC,yBAAIC,MAAJ,CAAWH,aAAX,EAA0BI,OAAO,CAACC,GAAR,CAAYC,UAAtC,CAAhB;;AACAZ,IAAAA,GAAG,CAACa,QAAJ,GAAeN,OAAf;AACAL,IAAAA,IAAI;AACL,GAJD,CAIE,OAAOY,KAAP,EAAc;AACdb,IAAAA,GAAG,CAACc,MAAJ,CAAW,UAAX,EAAuB,IAAvB;AACAd,IAAAA,GAAG,CAACc,MAAJ,CAAW,OAAX,EAAoB,IAApB;AACA,WAAOd,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BF,MAAAA,KAAK,EAAE,oBAFmB;AAG1BI,MAAAA,OAAO,EAAE;AAHiB,KAArB,CAAP;AAKD;;AACD,SAAO,KAAP;AACD,CAjBD;;AAmBA,IAAMC,OAAO,GAAGC,mBAAOC,WAAP,CAAmB;AACjCC,EAAAA,QAAQ,EAAE,kBAACtB,GAAD,EAAMuB,QAAN,EAAgBC,QAAhB,EAA6B;AACrCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAIC,IAAJ,GAAWC,WAAX,KAA2BH,QAAQ,CAACI,YAA3C,CAAR;AACD;AAHgC,CAAnB,CAAhB;;AAMA,IAAMC,MAAM,GAAG,wBAAO;AACpBT,EAAAA,OAAO,EAAPA;AADoB,CAAP,CAAf;;AAIAU,uBAAWtC,MAAX,CAAkB;AAChBuC,EAAAA,UAAU,EAAEpB,OAAO,CAACC,GAAR,CAAYoB,UADR;AAEhBC,EAAAA,OAAO,EAAEtB,OAAO,CAACC,GAAR,CAAYsB,MAFL;AAGhBC,EAAAA,UAAU,EAAExB,OAAO,CAACC,GAAR,CAAYwB;AAHR,CAAlB;;eAMe;AAAEpC,EAAAA,WAAW,EAAXA,WAAF;AAAe6B,EAAAA,MAAM,EAANA,MAAf;AAAuBC,EAAAA,UAAU,EAAVA;AAAvB,C","sourceRoot":"/home/sami/Documents/AutoMart/src","sourcesContent":["import express from 'express';\nimport dotenv from 'dotenv';\nimport bodyParser from 'body-parser';\nimport jwt from 'jsonwebtoken';\nimport multer from 'multer';\nimport cloudinary from 'cloudinary';\n\nconst app = express();\ndotenv.config();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.text());\napp.use(bodyParser.json({ type: 'application/json' }));\n\n\nconst verifyToken = (req, res, next) => {\n  console.log(req.headers);\n  const authorization = req.headers;\n  try {\n    const decoded = jwt.verify(authorization, process.env.SECRET_KEY);\n    req.userData = decoded;\n    next();\n  } catch (error) {\n    res.cookie('userData', null);\n    res.cookie('token', null);\n    return res.status(403).send({\n      status: 403,\n      error: 'Unauthorised User!',\n      success: 'false',\n    });\n  }\n  return false;\n};\n\nconst storage = multer.diskStorage({\n  filename: (req, carImage, callback) => {\n    callback(null, new Date().toISOString() + carImage.originalname);\n  },\n});\n\nconst upload = multer({\n  storage,\n});\n\ncloudinary.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.API_ID,\n  api_secret: process.env.API_SECRET,\n});\n\nexport default { verifyToken, upload, cloudinary };\n"]}