/*
import chai from 'chai';
import chaiHttp from 'chai-http';
import app from '../src/app';
import fakeData from './faker/fake';
import authData from './user_authentication_test';

chai.use(chaiHttp);

chai.should();
const expect = chai.expect();

const { token } = authData;
// eslint-disable-next-line import/no-mutable-exports
let carId;


describe('User Seller Activities', () => {
  it('should NOT let unauthenticated user (seller) create a new Advert ', (done) => {
    chai.request(app)
      .post('/api/v1/car/')
      .send(fakeData.newAdvert)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(404);
        res.body.data.should.have.property('message').equal('Unauthorised User!');
        done();
      });
  });

  it('should NOT let invalid Token user to post new Advert/affect posted Advert', (done) => {
    chai.request(app)
      .post('/api/v1/car')
      .send(fakeData.newAdvert)
      .set('authorization', 'represents invalid toke')
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(404);
        res.body.data.should.have.property('message').equal('Unauthorised User!');
        done();
      });
  });

  it('should let authenticated user (seller) to create new Advert', (done) => {
    chai.request(app)
      .post('/api/v1/car')
      .send(fakeData.newAdvert)
      .set('authorization', token)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.data.should.be.a('object');
        expect(res)
          .to.have.nested.property('body.data[0]')
          .that.includes.all.keys(['email', 'created_on', 'manufacturer', 'model',
          'price', 'state', 'status']);
        res.body.data.email.should.be.a('string');
        res.body.data.created_on.should.be.a('string');
        res.body.data.manufacturer.should.be.a('string');
        res.body.data.model.should.be.a('string');
        res.body.data.price.should.be.a('float');
        res.body.data.state.should.be.a('string');
        res.body.data.status.should.be.a('string');
        carId = res.body.data.id;
        done();
      });
  });

  it('Should let Authenticated User (seller) to mark his/her posted Advert as sold', (done) => {
    chai.request(app)
      .patch(`/api/v1/car/${carId}/status`)
      .send(fakeData.updateAdvert)
      .set('authorization', token)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.data.should.have.property('message').equal('Advert updated!');
        res.body.data.should.have.property('status').equal(fakeData.updateAdvert.sold);
        done();
      });
  });

  it('Should let Authenticated User (seller) to update the price of his/her posted AD.', (done) => {
    chai.request(app)
      .patch(`/api/v1/car/${carId}/price`)
      .send(fakeData.updateAdvert)
      .set('authorization', token)
      .end((err, res) => {
        res.body.should.be.a('object');
        res.body.should.have.property('status').equal(200);
        res.body.data.should.have.property('message').equal('Advert updated!');
        res.body.data.should.have.property('price').equal(fakeData.updateAdvert.price);
        done();
      });
  });
});

export default carId;
*/"use strict";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfc2VsbGVyX3Rlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiL2hvbWUvc2FtaS9Eb2N1bWVudHMvQXV0b01hcnQvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpSHR0cCBmcm9tICdjaGFpLWh0dHAnO1xuaW1wb3J0IGFwcCBmcm9tICcuLi9zcmMvYXBwJztcbmltcG9ydCBmYWtlRGF0YSBmcm9tICcuL2Zha2VyL2Zha2UnO1xuaW1wb3J0IGF1dGhEYXRhIGZyb20gJy4vdXNlcl9hdXRoZW50aWNhdGlvbl90ZXN0JztcblxuY2hhaS51c2UoY2hhaUh0dHApO1xuXG5jaGFpLnNob3VsZCgpO1xuY29uc3QgZXhwZWN0ID0gY2hhaS5leHBlY3QoKTtcblxuY29uc3QgeyB0b2tlbiB9ID0gYXV0aERhdGE7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLW11dGFibGUtZXhwb3J0c1xubGV0IGNhcklkO1xuXG5cbmRlc2NyaWJlKCdVc2VyIFNlbGxlciBBY3Rpdml0aWVzJywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIE5PVCBsZXQgdW5hdXRoZW50aWNhdGVkIHVzZXIgKHNlbGxlcikgY3JlYXRlIGEgbmV3IEFkdmVydCAnLCAoZG9uZSkgPT4ge1xuICAgIGNoYWkucmVxdWVzdChhcHApXG4gICAgICAucG9zdCgnL2FwaS92MS9jYXIvJylcbiAgICAgIC5zZW5kKGZha2VEYXRhLm5ld0FkdmVydClcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3N0YXR1cycpLmVxdWFsKDQwNCk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcXVhbCgnVW5hdXRob3Jpc2VkIFVzZXIhJyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIE5PVCBsZXQgaW52YWxpZCBUb2tlbiB1c2VyIHRvIHBvc3QgbmV3IEFkdmVydC9hZmZlY3QgcG9zdGVkIEFkdmVydCcsIChkb25lKSA9PiB7XG4gICAgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgIC5wb3N0KCcvYXBpL3YxL2NhcicpXG4gICAgICAuc2VuZChmYWtlRGF0YS5uZXdBZHZlcnQpXG4gICAgICAuc2V0KCdhdXRob3JpemF0aW9uJywgJ3JlcHJlc2VudHMgaW52YWxpZCB0b2tlJylcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3N0YXR1cycpLmVxdWFsKDQwNCk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcXVhbCgnVW5hdXRob3Jpc2VkIFVzZXIhJyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGxldCBhdXRoZW50aWNhdGVkIHVzZXIgKHNlbGxlcikgdG8gY3JlYXRlIG5ldyBBZHZlcnQnLCAoZG9uZSkgPT4ge1xuICAgIGNoYWkucmVxdWVzdChhcHApXG4gICAgICAucG9zdCgnL2FwaS92MS9jYXInKVxuICAgICAgLnNlbmQoZmFrZURhdGEubmV3QWR2ZXJ0KVxuICAgICAgLnNldCgnYXV0aG9yaXphdGlvbicsIHRva2VuKVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnc3RhdHVzJykuZXF1YWwoMjAwKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4gICAgICAgIGV4cGVjdChyZXMpXG4gICAgICAgICAgLnRvLmhhdmUubmVzdGVkLnByb3BlcnR5KCdib2R5LmRhdGFbMF0nKVxuICAgICAgICAgIC50aGF0LmluY2x1ZGVzLmFsbC5rZXlzKFsnZW1haWwnLCAnY3JlYXRlZF9vbicsICdtYW51ZmFjdHVyZXInLCAnbW9kZWwnLFxuICAgICAgICAgICdwcmljZScsICdzdGF0ZScsICdzdGF0dXMnXSk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuZW1haWwuc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICByZXMuYm9keS5kYXRhLmNyZWF0ZWRfb24uc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICByZXMuYm9keS5kYXRhLm1hbnVmYWN0dXJlci5zaG91bGQuYmUuYSgnc3RyaW5nJyk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEubW9kZWwuc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICByZXMuYm9keS5kYXRhLnByaWNlLnNob3VsZC5iZS5hKCdmbG9hdCcpO1xuICAgICAgICByZXMuYm9keS5kYXRhLnN0YXRlLnNob3VsZC5iZS5hKCdzdHJpbmcnKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5zdGF0dXMuc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICBjYXJJZCA9IHJlcy5ib2R5LmRhdGEuaWQ7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICB9KTtcblxuICBpdCgnU2hvdWxkIGxldCBBdXRoZW50aWNhdGVkIFVzZXIgKHNlbGxlcikgdG8gbWFyayBoaXMvaGVyIHBvc3RlZCBBZHZlcnQgYXMgc29sZCcsIChkb25lKSA9PiB7XG4gICAgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgIC5wYXRjaChgL2FwaS92MS9jYXIvJHtjYXJJZH0vc3RhdHVzYClcbiAgICAgIC5zZW5kKGZha2VEYXRhLnVwZGF0ZUFkdmVydClcbiAgICAgIC5zZXQoJ2F1dGhvcml6YXRpb24nLCB0b2tlbilcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3N0YXR1cycpLmVxdWFsKDIwMCk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcXVhbCgnQWR2ZXJ0IHVwZGF0ZWQhJyk7XG4gICAgICAgIHJlcy5ib2R5LmRhdGEuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3N0YXR1cycpLmVxdWFsKGZha2VEYXRhLnVwZGF0ZUFkdmVydC5zb2xkKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdTaG91bGQgbGV0IEF1dGhlbnRpY2F0ZWQgVXNlciAoc2VsbGVyKSB0byB1cGRhdGUgdGhlIHByaWNlIG9mIGhpcy9oZXIgcG9zdGVkIEFELicsIChkb25lKSA9PiB7XG4gICAgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgIC5wYXRjaChgL2FwaS92MS9jYXIvJHtjYXJJZH0vcHJpY2VgKVxuICAgICAgLnNlbmQoZmFrZURhdGEudXBkYXRlQWR2ZXJ0KVxuICAgICAgLnNldCgnYXV0aG9yaXphdGlvbicsIHRva2VuKVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnc3RhdHVzJykuZXF1YWwoMjAwKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLmVxdWFsKCdBZHZlcnQgdXBkYXRlZCEnKTtcbiAgICAgICAgcmVzLmJvZHkuZGF0YS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgncHJpY2UnKS5lcXVhbChmYWtlRGF0YS51cGRhdGVBZHZlcnQucHJpY2UpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KTtcbiAgfSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgY2FySWQ7XG4qL1xuIl19
var cov_2jhi50u0dv=function(){var path="/home/sami/Documents/AutoMart/test/user_seller_test.js";var hash="abdb38ece5b5dabedb616bdf8b8ee2b68eec4f3d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sami/Documents/AutoMart/test/user_seller_test.js",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"abdb38ece5b5dabedb616bdf8b8ee2b68eec4f3d"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();