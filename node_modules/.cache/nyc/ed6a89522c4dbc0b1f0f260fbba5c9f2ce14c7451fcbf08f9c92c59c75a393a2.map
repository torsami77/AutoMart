{"version":3,"sources":["user_buyer_test.js"],"names":[],"mappings":"AAAA","sourceRoot":"/home/sami/Documents/AutoMart/test","sourcesContent":["/*\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../src/app';\nimport fakeData from './faker/fake';\nimport authData from './user_authentication_test';\n\n\nchai.use(chaiHttp);\n\nchai.should();\nconst expect = chai.expect();\n\nlet orderId;\nconst { token } = authData;\n\n\ndescribe('User Buyer Activities', () => {\n  it('should NOT let unauthenticated user (buyer) to make a purchase order', (done) => {\n    chai.request(app)\n      .post('/api/v1/order/')\n      .send(fakeData.purchaseOrder)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(404);\n        res.body.data.should.have.property('message').equal('Unauthorised User!');\n        done();\n      });\n  });\n\n  it('should let authenticated user (buyer) to make a purchase order', (done) => {\n    chai.request(app)\n      .post('/api/v1/order/')\n      .send(fakeData.purchaseOrder)\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.data.should.have.property('message').equal('Purchase order Placed successfully!');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'car_id', 'created_on',\n          'status', 'price', 'price_offered']);\n        res.body.data.id.should.be.a('integer');\n        res.body.data.car_id.should.be.a('integer');\n        res.body.data.created_on.should.be.a('string');\n        res.body.data.status.should.be.a('string');\n        res.body.data.price.should.be.a('float');\n        res.body.data.price_offered.should.be.a('float');\n        orderId = res.body.data.id;\n        done();\n      });\n  });\n\n  it('should let authenticated user (buyer) to Update the price of a purchase order', (done) => {\n    chai.request(app)\n      .patch(`/api/v1/order/${orderId}/price`)\n      .send(fakeData.updateOrder)\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.data.should.have.property('message').equal('Purchase order updated successfully!');\n        expect(res)\n          .to.have.nested.property('body.data[0]')\n          .that.includes.all.keys(['id', 'car_id', 'status', 'old_price_offered',\n          'new_price_offered']);\n        res.body.data.id.should.be.a('integer');\n        res.body.data.car_id.should.be.a('integer');\n        res.body.data.status.should.be.a('string');\n        res.body.data.old_price_offered.should.be.a('float');\n        res.body.data.new_price_offered.should.be.a('float');\n        done();\n      });\n  });\n});\n*/\n"]}