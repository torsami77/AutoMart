{"version":3,"sources":["seller.js"],"names":["app","cloudinary","mynodeconfig","use","bodyParser","json","urlencoded","extended","text","type","Seller","req","res","body","manufacturer","model","bodyType","year","mileage","state","transmission","vehicleInspectionNumber","licence","description","price","status","send","error","success","field","isNaN","parseInt","parseFloat","file","originalname","match","uploader","upload","path","result","_error","secure_url","imageGallery","orders","flags","id","db","cars","length","createdOn","Date","newCar","owner","userData","created_on","push","data","email","message","params","carId","newPrice","checker","theCar","map","car","newStatus"],"mappings":"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","sourceRoot":"/home/sami/Documents/AutoMart/src/ctl","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport db from '../db/db';\nimport mynodeconfig from '../mynodeconfig';\n\nconst app = express();\nconst { cloudinary } = mynodeconfig;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.text());\napp.use(bodyParser.json({ type: 'application/json' }));\n\n\nclass Seller {\n  static postAd(req, res) {\n    let {\n      // eslint-disable-next-line max-len\n      manufacturer, model, bodyType, year, mileage, state, transmission, vehicleInspectionNumber, licence, description, price,\n    } = req.body;\n\n    if (!manufacturer || manufacturer === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'manufacturer field cannot be empty!',\n        success: 'false',\n        field: 'manufacturer',\n      });\n      return false;\n    }\n\n    if (!model || model === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'model field cannot be empty!',\n        success: 'false',\n        field: 'model',\n      });\n      return false;\n    }\n\n    if (!bodyType || bodyType === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'body type field cannot be empty!',\n        success: 'false',\n        field: 'bodyType',\n      });\n      return false;\n    }\n\n    if (!year) {\n      res.status(422).send({\n        status: 422,\n        error: 'year field cannot be empty!',\n        success: 'false',\n        field: 'year',\n      });\n      return false;\n    }\n\n    if (isNaN(parseInt(year, 10))) {\n      res.status(422).send({\n        status: 422,\n        error: 'invalid year input',\n        success: 'false',\n        field: 'year',\n      });\n      return false;\n    }\n\n    if (!mileage) {\n      res.status(422).send({\n        status: 422,\n        error: 'mileage field cannot be empty!',\n        success: 'false',\n        field: 'mileage',\n      });\n      return false;\n    }\n\n    if (isNaN(parseFloat(mileage))) {\n      res.status(422).send({\n        status: 422,\n        error: 'invalid mileage input',\n        success: 'false',\n        field: 'mileage',\n      });\n      return false;\n    }\n\n    if (!state || state === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'state field cannot be empty!',\n        success: 'false',\n        field: 'state',\n      });\n      return false;\n    }\n\n    if (!transmission || transmission === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'transmission field cannot be empty!',\n        success: 'false',\n        field: 'transmission',\n      });\n      return false;\n    }\n\n    if (!vehicleInspectionNumber || vehicleInspectionNumber === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'vehicle inspection number field cannot be empty!',\n        success: 'false',\n        field: 'vehicleInspectionNumber',\n      });\n      return false;\n    }\n\n    if (!licence || licence === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'licence field cannot be empty!',\n        success: 'false',\n        field: 'licence',\n      });\n      return false;\n    }\n\n    if (!description || description === ' ') {\n      res.status(422).send({\n        status: 422,\n        error: 'description field cannot be empty!',\n        success: 'false',\n        field: 'description',\n      });\n      return false;\n    }\n\n    if (!price) {\n      res.status(422).send({\n        status: 422,\n        error: 'price field cannot be empty!',\n        success: 'false',\n        field: 'price',\n      });\n      return false;\n    }\n\n    if (isNaN(parseFloat(price))) {\n      res.status(422).send({\n        status: 422,\n        error: 'invalid price input',\n        success: 'false',\n        field: 'price',\n      });\n      return false;\n    }\n    if (!req.file) {\n      res.status(422).send({\n        status: 422,\n        error: 'Upload at least one image!',\n        success: 'false',\n        field: 'carImage',\n      });\n      return false;\n    }\n\n    if (!req.file.originalname.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      res.status(422).send({\n        status: 422,\n        error: 'Please provide a valid image file!',\n        success: 'false',\n        field: 'carImage',\n      });\n      return false;\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    cloudinary.uploader.upload(req.file.path, (result, _error) => {\n      if (result.secure_url) {\n        const imageGallery = [result.secure_url];\n        const orders = [];\n        const flags = [];\n        const id = db.cars.length + 1;\n        const createdOn = new Date();\n        const status = 'available';\n        price = parseFloat(price);\n        mileage = parseFloat(mileage);\n        year = parseFloat(year);\n\n        const newCar = {\n          id,\n          owner: req.userData.id,\n          created_on: createdOn,\n          // eslint-disable-next-line object-property-newline\n          state, status, price, manufacturer, model, bodyType, year, mileage,\n          // eslint-disable-next-line object-property-newline\n          transmission, vehicleInspectionNumber, licence, description, imageGallery, orders, flags,\n        };\n        db.cars.push(newCar);\n        res.status(201).send({\n          status: 201,\n          data: {\n            id,\n            email: req.userData.email,\n            created_on: createdOn,\n            manufacturer,\n            model,\n            price,\n            state,\n            status,\n            imageGallery,\n            message: 'Your Ad has been added successfully!',\n            success: 'true',\n          },\n        });\n        return false;\n      }\n      res.status(500).send({\n        status: 500,\n        error: 'No response from Cloudinary!, Please try again ',\n        success: 'false',\n        field: 'Cloudinary',\n      });\n      return false;\n    });\n    return false;\n  }\n\n  static updatePrice(req, res) {\n    if (isNaN(parseFloat(req.body.price))) {\n      res.status(401).send({\n        status: 401,\n        error: 'Invalid Price value!',\n        success: 'false',\n        field: 'Price',\n      });\n      return false;\n    }\n\n    if (isNaN(parseInt(req.params.carId, 10))) {\n      res.status(401).send({\n        status: 401,\n        error: 'Invalid Param Request!',\n        success: 'false',\n        field: 'Price',\n      });\n      return false;\n    }\n    const carId = parseInt(req.params.carId, 10);\n    const newPrice = parseFloat(req.body.price);\n\n    let checker = 0;\n    let theCar;\n    db.cars.map((car) => {\n      if (car.id === carId) {\n        checker = 1;\n        if (car.status !== 'sold' && car.owner === req.userData.id) {\n          car.price = newPrice;\n          checker = 2;\n          theCar = car;\n        }\n      }\n      return false;\n    });\n    if (checker === 2) {\n      res.status(201).send({\n        status: 201,\n        data: {\n          id: req.userData.id,\n          email: req.userData.email,\n          created_on: theCar.created_on,\n          manufacturer: theCar.manufacturer,\n          model: theCar.model,\n          price: theCar.price,\n          state: theCar.state,\n          status: theCar.status,\n          message: 'New price Updated!',\n          success: 'True',\n          field: 'Price',\n        },\n      });\n      return false;\n    }\n    if (checker === 1) {\n      res.status(403).send({\n        status: 403,\n        error: 'You cannot change the price of this Ad!',\n        success: 'false',\n        field: 'Price',\n      });\n      return false;\n    }\n\n    if (checker === 0) {\n      res.status(404).send({\n        status: 404,\n        error: 'Ad not found in database!',\n        success: 'false',\n        field: 'Price',\n      });\n      return false;\n    }\n    return false;\n  }\n\n  static markAsSold(req, res) {\n    if (isNaN(parseInt(req.params.carId, 10))) {\n      res.status(401).send({\n        status: 401,\n        error: 'Invalid Param Request!',\n        success: 'false',\n        field: 'sold',\n      });\n      return false;\n    }\n    const carId = parseInt(req.params.carId, 10);\n\n    let newStatus;\n    let theCar;\n    db.cars.map((car) => {\n      if (car.id === carId && car.owner === req.userData.id) {\n        car.status = 'sold';\n        newStatus = 'sold';\n        theCar = car;\n      }\n      return false;\n    });\n    if (newStatus) {\n      res.status(201).send({\n        status: 201,\n        data: {\n          id: req.userData.id,\n          email: req.userData.email,\n          created_on: theCar.created_on,\n          manufacturer: theCar.manufacturer,\n          model: theCar.model,\n          price: theCar.price,\n          state: theCar.state,\n          status: theCar.status,\n          message: 'Car marked as sold!',\n          success: 'True',\n          field: 'sold',\n        },\n      });\n      return false;\n    // eslint-disable-next-line no-else-return\n    } else {\n      res.status(403).send({\n        status: 403,\n        error: 'You are not allowed to mark this Ad as sold!',\n        success: 'false',\n        field: 'Price',\n      });\n      return false;\n    }\n  }\n}\n\n\nexport default Seller;\n"]}