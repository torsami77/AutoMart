{"version":3,"sources":["admin_test.js"],"names":["chai","use","chaiHttp","should","expect","api","request","data","fs","readFileSync","__dirname","token","toString","describe","it","done","get","set","end","err","res","body","be","a","have","property","equal","adminToken","post","send","db","users"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAFA;AAIAA,iBAAKC,GAAL,CAASC,oBAAT;;AAEAF,iBAAKG,MAAL;;IACQC,M,GAAWJ,gB,CAAXI,M;;AAER,IAAMC,GAAG,GAAGL,iBAAKM,OAAL,CAAa,uBAAb,CAAZ;;AAEA,IAAMC,IAAI,GAAGC,eAAGC,YAAH,WAAmBC,SAAnB,wBAAb;;AACA,IAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAd;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCC,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC5DV,IAAAA,GAAG,CACAW,GADH,CACO,cADP,EAEGC,GAFH,CAEO,eAFP,EAEwBN,KAFxB,EAGGO,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,MAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBmB,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAH,MAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBqB,IAAhB,CAAqBC,QAArB,CAA8B,QAA9B,EAAwCC,KAAxC,CAA8C,GAA9C;AACAN,MAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBqB,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,KAAzC,CAA+C,OAA/C;AACAN,MAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBqB,IAAhB,CAAqBC,QAArB,CAA8B,OAA9B,EAAuCC,KAAvC,CAA6C,sDAA7C;AACAX,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF;AAYF;;;;;;;;;;;;;;;AAcCD,EAAAA,EAAE,CAAC,uBAAD,EAA0B,UAACC,IAAD,EAAU;AACrC,QAAIY,UAAJ;AACAtB,IAAAA,GAAG,CACAuB,IADH,CACQ,gBADR,EAEGC,IAFH,CAEQC,eAAGC,KAAH,CAAS,CAAT,CAFR,EAGGb,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBO,MAAAA,UAAU,GAAGP,GAAG,CAACC,IAAJ,CAASd,IAAT,CAAcI,KAA3B;AACD,KALH;AAOAG,IAAAA,EAAE,CAAC,wDAAD,EAA2D,UAACC,IAAD,EAAU;AACrEV,MAAAA,GAAG,CACAW,GADH,CACO,cADP,EAEGC,GAFH,CAEO,eAFP,EAEwBU,UAFxB,EAGGT,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBmB,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAH,QAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBqB,IAAhB,CAAqBC,QAArB,CAA8B,QAA9B,EAAwCC,KAAxC,CAA8C,GAA9C;AACAN,QAAAA,GAAG,CAACC,IAAJ,CAASlB,MAAT,CAAgBqB,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,KAAzC,CAA+C,MAA/C;AACAN,QAAAA,GAAG,CAACC,IAAJ,CAASd,IAAT,CAAcJ,MAAd,CAAqBmB,EAArB,CAAwBC,CAAxB,CAA0B,OAA1B;AACAR,QAAAA,IAAI;AACL,OATH;AAUD,KAXC,CAAF;AAYF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CG,GAhEA,CAAF;AAiEA,CA5FO,CAAR","sourceRoot":"/home/sami/Documents/AutoMart/test","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport fs from 'fs';\n// eslint-disable-next-line no-unused-vars\nimport app from '../src/app';\nimport db from '../src/db/db';\n\nchai.use(chaiHttp);\n\nchai.should();\nconst { expect } = chai;\n\nconst api = chai.request('http://localhost:5000');\n\nconst data = fs.readFileSync(`${__dirname}/assumed/token.txt`);\nconst token = data.toString();\n\ndescribe('ADMIN Activities', () => {\n  it('should NOT let NON-ADMIN user to view sold AD', (done) => {\n    api\n      .get('/api/v1/car/')\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(403);\n        res.body.should.have.property('success').equal('false');\n        res.body.should.have.property('error').equal('You need Admin priviledges to view this set of data!');\n        done();\n      });\n  });\n/*\n  it('should NOT let NON-ADMIN user to DELETE an AD', (done) => {\n    api\n      .delete('/api/v1/car/1/')\n      .set('authorization', token)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(404);\n        res.body.should.have.property('success').equal('false');\n        res.body.should.have.property('error').equal('You need Admin priviledges to view this set of data!');\n        done();\n      });\n  });\n  */\n it('AUTH ADMIN Activities', (done) => {\n  let adminToken;\n  api\n    .post('/api/v1/signin')\n    .send(db.users[1])\n    .end((err, res) => {\n      adminToken = res.body.data.token;\n    });\n\n  it('should let ADMIN user to view all AD including sold AD', (done) => {\n    api\n      .get('/api/v1/car/')\n      .set('authorization', adminToken)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.data.should.be.a('array');\n        done();\n      });\n  });\n/*\n  it('should respond to ADMIN\"s attempt to DELETE AD without reference', (done) => {\n    api\n      .delete('/api/v1/car/:carId/')\n      .set('authorization', adminToken)\n      .send(assumedData.admin)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(401);\n        res.body.should.have.property('success').equal('false');\n        res.body.should.have.property('error').equal('Please provide a valid Ad reference!');\n        done();\n      });\n  });\n\n  it('should respond to ADMIN\"s attempt to DELETE non-exitent AD', (done) => {\n    api\n      .delete('/api/v1/car/0/')\n      .set('authorization', adminToken)\n      .send(assumedData.admin)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(404);\n        res.body.should.have.property('success').equal('false');\n        res.body.should.have.property('error').equal('Ad not found!');\n        done();\n      });\n  });\n\n  it('should let ADMIN to DELETE AD successfuly', (done) => {\n    api\n      .get('/api/v1/car/1/')\n      .set('authorization', adminToken)\n      .send(assumedData.admin)\n      .end((err, res) => {\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').equal(200);\n        res.body.should.have.property('success').equal('true');\n        res.body.should.have.property('message').equal('Car Ad successfully deleted!');\n        done();\n      });\n  });\n  */\n  });\n});\n"]}